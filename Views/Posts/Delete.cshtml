@* @model TourismWeb.Models.Post

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Spot)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Spot.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TypeOfPost)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TypeOfPost)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageUrl)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="PostId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div> *@
@model TourismWeb.Models.Post
@{
    ViewData["Title"] = "Delete";
}

<style>
    .delete-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .delete-card {
        background: linear-gradient(135deg, #fef2f2 0%, #fef7f7 100%);
        border-radius: 20px;
        border: 1px solid #fecaca;
        box-shadow: 0 20px 40px rgba(239, 68, 68, 0.1);
        overflow: hidden;
        position: relative;
    }

    .delete-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #ef4444, #dc2626, #b91c1c);
    }

    .delete-header {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
        padding: 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .delete-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 10px,
            rgba(255, 255, 255, 0.05) 10px,
            rgba(255, 255, 255, 0.05) 20px
        );
        animation: shimmer 3s linear infinite;
    }

    @@keyframes shimmer {
        0% { transform: translateX(-100%) translateY(-100%); }
        100% { transform: translateX(100%) translateY(100%); }
    }

    .delete-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.1); }
    }

    .delete-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        position: relative;
        z-index: 1;
    }

    .delete-subtitle {
        font-size: 1.1rem;
        font-weight: 400;
        opacity: 0.9;
        position: relative;
        z-index: 1;
    }

    .delete-content {
        padding: 2.5rem;
    }

    .warning-banner {
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        border: 1px solid #f59e0b;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .warning-icon {
        font-size: 2rem;
        color: #d97706;
        animation: bounce 2s infinite;
    }

    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }

    .warning-text {
        flex: 1;
        color: #92400e;
        font-weight: 600;
        line-height: 1.5;
    }

    .post-details {
        background: #ffffff;
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 2rem;
        border: 1px solid #f3f4f6;
    }

    .details-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #374151;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .detail-item {
        display: flex;
        padding: 1rem 0;
        border-bottom: 1px solid #f3f4f6;
        transition: all 0.3s ease;
    }

    .detail-item:last-child {
        border-bottom: none;
    }

    .detail-item:hover {
        background: #f9fafb;
        margin: 0 -1rem;
        padding: 1rem;
        border-radius: 8px;
    }

    .detail-label {
        flex: 0 0 30%;
        font-weight: 600;
        color: #6b7280;
        font-size: 0.95rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .detail-value {
        flex: 1;
        color: #374151;
        word-break: break-word;
        line-height: 1.6;
    }

    .content-preview {
        max-height: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .delete-btn {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
        border: none;
        padding: 1rem 2.5rem;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
        position: relative;
        overflow: hidden;
        letter-spacing: 0.025em;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
    }

    .delete-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .delete-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);
    }

    .delete-btn:hover::before {
        left: 100%;
    }

    .delete-btn:active {
        transform: translateY(0);
    }

    .cancel-btn {
        background: linear-gradient(135deg, #6b7280, #4b5563);
        color: white;
        border: none;
        padding: 1rem 2.5rem;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 15px rgba(107, 114, 128, 0.3);
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        letter-spacing: 0.025em;
    }

    .cancel-btn:hover {
        background: linear-gradient(135deg, #4b5563, #374151);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(107, 114, 128, 0.4);
    }

    @@media (max-width: 768px) {
        .delete-container {
            margin: 1rem auto;
            padding: 0 0.5rem;
        }
        
        .delete-content {
            padding: 1.5rem;
        }
        
        .delete-title {
            font-size: 2rem;
        }
        
        .detail-item {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .detail-label {
            flex: none;
        }
        
        .action-buttons {
            flex-direction: column;
        }
        
        .delete-btn,
        .cancel-btn {
            width: 100%;
            justify-content: center;
        }
    }

    /* Animation cho card khi load */
    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .delete-card {
        animation: slideDown 0.6s ease-out;
    }
</style>

<div class="delete-container">
    <div class="delete-card">
        <div class="delete-header">
            <div class="delete-icon">üóëÔ∏è</div>
            <h1 class="delete-title">X√°c nh·∫≠n x√≥a</h1>
            <p class="delete-subtitle">B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y kh√¥ng?</p>
        </div>

        <div class="delete-content">
            <div class="warning-banner">
                <div class="warning-icon">‚ö†Ô∏è</div>
                <div class="warning-text">
                    <strong>C·∫£nh b√°o:</strong> H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c. T·∫•t c·∫£ d·ªØ li·ªáu li√™n quan ƒë·∫øn b√†i vi·∫øt s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn.
                </div>
            </div>

            <div class="post-details">
                <h4 class="details-title">
                    üìù Th√¥ng tin b√†i vi·∫øt
                </h4>
                
                <div class="detail-item">
                    <dt class="detail-label">
                        üë§ @Html.DisplayNameFor(model => model.User)
                    </dt>
                    <dd class="detail-value">
                        @Html.DisplayFor(model => model.User.FullName)
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üìç @Html.DisplayNameFor(model => model.Spot)
                    </dt>
                    <dd class="detail-value">
                        @Html.DisplayFor(model => model.Spot.Address)
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üè∑Ô∏è @Html.DisplayNameFor(model => model.TypeOfPost)
                    </dt>
                    <dd class="detail-value">
                        @Html.DisplayFor(model => model.TypeOfPost)
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üì∞ @Html.DisplayNameFor(model => model.Title)
                    </dt>
                    <dd class="detail-value">
                        <strong>@Html.DisplayFor(model => model.Title)</strong>
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üìÑ @Html.DisplayNameFor(model => model.Content)
                    </dt>
                    <dd class="detail-value">
                        <div class="content-preview">
                            @Html.DisplayFor(model => model.Content)
                        </div>
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üñºÔ∏è @Html.DisplayNameFor(model => model.ImageUrl)
                    </dt>
                    <dd class="detail-value">
                        @Html.DisplayFor(model => model.ImageUrl)
                    </dd>
                </div>

                <div class="detail-item">
                    <dt class="detail-label">
                        üìÖ @Html.DisplayNameFor(model => model.CreatedAt)
                    </dt>
                    <dd class="detail-value">
                        @Html.DisplayFor(model => model.CreatedAt)
                    </dd>
                </div>
            </div>

            <div class="action-buttons">
                <form asp-action="Delete" style="display: inline;">
                    <input type="hidden" asp-for="PostId" />
                    <button type="submit" class="delete-btn" onclick="return confirmDelete()">
                        üóëÔ∏è X√≥a b√†i vi·∫øt
                    </button>
                </form>
                
                <a asp-action="Index" class="cancel-btn">
                    ‚Ü©Ô∏è Quay l·∫°i danh s√°ch
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmDelete() {
        return confirm('B·∫°n c√≥ th·ª±c s·ª± ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!');
    }
    
    // Th√™m hi·ªáu ·ª©ng loading khi submit
    document.addEventListener('DOMContentLoaded', function() {
        const deleteBtn = document.querySelector('.delete-btn');
        const form = document.querySelector('form');
        
        if (form && deleteBtn) {
            form.addEventListener('submit', function() {
                deleteBtn.innerHTML = '‚è≥ ƒêang x√≥a...';
                deleteBtn.disabled = true;
            });
        }
    });
</script>