@model IEnumerable<TourismWeb.Models.Post>

@{
    ViewData["Title"] = "Tr·∫£i Nghi·ªám Du L·ªãch";
}

<div class="container mt-4">
    <div class="hero-section mb-4">
        <h1 class="hero-title text-center mb-4">TR·∫¢I NGHI·ªÜM DU L·ªäCH</h1>
        
        <div class="row align-items-center mb-4">
            <div class="col-lg-9 mb-3 mb-lg-0">
                @* <div class="category-tabs d-flex flex-wrap gap-2">
                    <div class="category-tab tab-tatca">T·∫•t c·∫£</div>
                    <div class="category-tab tab-baibien">B√£i bi·ªÉn, ƒê·∫£o</div>
                    <div class="category-tab tab-khuvuichoi">Khu vui ch∆°i</div>
                    <div class="category-tab tab-canhdep">C·∫£nh ƒë·∫πp</div>
                    <div class="category-tab tab-chuachien">Ch√πa chi·ªÅn</div>
                    <div class="category-tab tab-hangdong">Hang ƒë·ªông</div>
                    <div class="category-tab tab-ditich">Di t√≠ch</div>
                </div> *@
            </div>
            <div class="col-lg-3 text-lg-end">
                <a asp-action="Create" class="btn create-btn">
                    <i class="bi bi-plus-circle me-2"></i>Th√™m Tr·∫£i Nghi·ªám M·ªõi
                </a>
            </div>
        </div>
    </div>

    <div class="section-title mb-4">
        <h2>Kh√°m Ph√° Tr·∫£i Nghi·ªám</h2>
    </div>

    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="article-card h-100 border-0 shadow-sm rounded-3 overflow-hidden">
                    <div class="position-relative">
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Title" style="height: 200px; object-fit: cover;">
                        <span class="article-category position-absolute top-0 start-0 m-3 py-1 px-2 rounded-pill">
                            @item.Spot.Name
                        </span>
                    </div>
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>@item.CreatedAt.ToString("dd/MM/yyyy")
                            </small>
                            <small class="text-muted">
                                <i class="bi bi-person me-1"></i>@item.User.FullName
                            </small>
                        </div>
                        <h5 class="card-title fw-bold mb-3">@item.Title</h5>
                        <p class="card-text mb-4">@(item.Content.Length > 150 ? item.Content.Substring(0, 150) + "..." : item.Content)</p>
                        
                        <div class="d-flex justify-content-between align-items-center mt-auto">
                            <div class="article-interactions">
                                <div class="interaction-item me-3 d-inline-block">
                                    <span class="interaction-icon">‚ù§Ô∏è</span>
                                    <span>0</span>
                                </div>
                                <div class="interaction-item d-inline-block">
                                    <span class="interaction-icon">üí¨</span>
                                    <span>0</span>
                                </div>
                            </div>
                            <div class="btn-group">
                                <a asp-action="Details" asp-route-id="@item.PostId" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye me-1"></i>Chi Ti·∫øt
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.PostId" class="btn btn-sm btn-outline-secondary">
                                    <i class="bi bi-pencil me-1"></i>S·ª≠a
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.PostId" class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-trash me-1"></i>X√≥a
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <p class="text-muted">Ch∆∞a c√≥ tr·∫£i nghi·ªám n√†o. H√£y th√™m tr·∫£i nghi·ªám m·ªõi!</p>
        </div>
    }
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <style>
        /* General styles */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .container {
            max-width: 1200px;
        }

        /* Hero section styles */
        .hero-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #333;
            letter-spacing: 1px;
            text-transform: uppercase;
        }
        .create-btn {
            background: linear-gradient(90deg, #ff6b6b, #ff9e7d);
            color: white;
            border: none;
        }

        /* Category tabs */
        .category-tabs {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .category-tab {
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .category-tab:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .tab-tatca {
            background-color: rgba(249, 172, 7, 0.96);
            color: white;
        }

        .tab-baibien {
            background-color: #ff6b35e4;
            color: white;
        }

        .tab-khuvuichoi {
            background-color: #e63946;
            color: white;
        }

        .tab-canhdep {
            background-color: #ff9a3c;
            color: white;
        }

        .tab-chuachien {
            background-color: #ff5c8d;
            color: white;
        }

        .tab-hangdong {
            background-color: #f87060;
            color: white;
        }

        .tab-ditich {
            background-color: rgb(214, 60, 43);
            color: white;
        }

        /* Section title */
        .section-title {
            position: relative;
            padding-bottom: 15px;
            margin-bottom: 25px;
        }

        .section-title h2 {
            font-size: 1.8rem;
            font-weight: 600;
            color: #333;
        }

        .section-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: #0d6efd;
        }

        /* Article cards */
        .article-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08) !important;
        }

        .article-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
        }

        .article-category {
            background-color: rgba(234, 213, 33, 0.9);
            color: white;
            font-size: 0.8rem;
            font-weight: 500;
            padding: 5px 12px;
        }

        .card-title {
            font-size: 1.2rem;
            line-height: 1.4;
        }

        .card-text {
            color: #666;
            line-height: 1.6;
        }

        /* Interaction items */
        .interaction-item {
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .interaction-item:hover .interaction-icon {
            transform: scale(1.2);
        }

        .interaction-icon {
            transition: transform 0.3s ease;
            margin-right: 3px;
        }

        /* Create button */
        .create-btn {
            border-radius: 20px;
            padding: 10px 20px;
            font-weight: 500;
            box-shadow: 0 2px 5px rgba(13, 110, 253, 0.3);
            transition: all 0.3s ease;
        }

        .create-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(13, 110, 253, 0.4);
        }

    </style>
}

@section Scripts {
    <script>
        // Category tab functionality
        const categoryTabs = document.querySelectorAll('.category-tab');
        categoryTabs.forEach(tab => {
            tab.addEventListener('click', () => {
                categoryTabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                // Here you would add filtering logic based on selected category
            });
        });

        // Like functionality
        const heartIcons = document.querySelectorAll('.interaction-item:first-child');
        heartIcons.forEach(icon => {
            icon.addEventListener('click', function() {
                const countElement = this.querySelector('span:last-child');
                let count = parseInt(countElement.textContent);

                if (!this.classList.contains('liked')) {
                    countElement.textContent = count + 1;
                    this.classList.add('liked');
                    this.querySelector('.interaction-icon').style.color = 'red';
                } else {
                    countElement.textContent = count - 1;
                    this.classList.remove('liked');
                    this.querySelector('.interaction-icon').style.color = '';
                }
            });
        });
    </script>
}