@* @model IEnumerable<TourismWeb.Models.Post>

@{
    ViewData["Title"] = "Moderate Posts";
}
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h1 class="page-title">Post Moderation</h1>
                <button class="btn btn-primary create-btn" onclick="location.href='@Url.Action("Create")'">
                    <i class="bi bi-plus-lg"></i>
                    <span>Create New</span>
                </button>
            </div>
            <p class="text-muted">Manage all submitted content</p>
        </div>
    </div>

    <div class="content">
        <div class="container-fluid">
            <div class="filter-tabs mb-4">
                <a asp-action="Moderate" class="filter-tab active">
                    <i class="bi bi-collection"></i>
                    <span>All Posts</span>
                </a>
                <a asp-action="Moderate" asp-route-status="Pending" class="filter-tab pending-tab">
                    <i class="bi bi-hourglass-split"></i>
                    <span>Pending</span>
                    <span class="badge bg-warning">
                        @Model.Count(p => p.Status == TourismWeb.Models.PostStatus.Pending)
                    </span>
                </a>
                <a asp-action="Moderate" asp-route-status="Approved" class="filter-tab approved-tab">
                    <i class="bi bi-check-circle"></i>
                    <span>Approved</span>
                    <span class="badge bg-success">
                        @Model.Count(p => p.Status == TourismWeb.Models.PostStatus.Approved)
                    </span>
                </a>
                <a asp-action="Moderate" asp-route-status="Rejected" class="filter-tab rejected-tab">
                    <i class="bi bi-x-circle"></i>
                    <span>Rejected</span>
                    <span class="badge bg-danger">
                        @Model.Count(p => p.Status == TourismWeb.Models.PostStatus.Rejected)
                    </span>
                </a>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Posts List</h5>
                        <div class="search-box">
                            <input type="text" class="form-control" placeholder="Search posts...">
                            <i class="bi bi-search"></i>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.PostId)</th>
                                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                                    <th>@Html.DisplayNameFor(model => model.TypeOfPost)</th>
                                    <th>@Html.DisplayNameFor(model => model.Spot)</th>
                                    <th>@Html.DisplayNameFor(model => model.User)</th>
                                    <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                                    <th>@Html.DisplayNameFor(model => model.Status)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.PostId)</td>
                                        <td class="title-cell">@Html.DisplayFor(modelItem => item.Title)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TypeOfPost)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Spot.Name)</td>
                                        <td>
                                            <div class="user-info">
                                                <div class="user-avatar">
                                                    <span>@item.User.FullName.Substring(0, 1).ToUpper()</span>
                                                </div>
                                                <span>@Html.DisplayFor(modelItem => item.User.FullName)</span>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="date-info">
                                                <i class="bi bi-calendar3"></i>
                                                <span>@item.CreatedAt.ToString("dd/MM/yyyy")</span>
                                            </div>
                                            <div class="time-info">
                                                <i class="bi bi-clock"></i>
                                                <span>@item.CreatedAt.ToString("HH:mm")</span>
                                            </div>
                                        </td>
                                        <td>
                                            @{
                                                string statusClass = item.Status == TourismWeb.Models.PostStatus.Pending
                                                ? "badge bg-warning"
                                                : (item.Status == TourismWeb.Models.PostStatus.Approved
                                                ? "badge bg-success"
                                                : "badge bg-danger");
                                            }
                                            <span class="@statusClass">@item.Status</span>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                <a asp-action="Details" asp-route-id="@item.PostId"
                                                    class="btn btn-sm btn-outline-primary" title="View Details">
                                                    <i class="bi bi-eye-fill"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.PostId"
                                                    class="btn btn-sm btn-outline-secondary" title="Edit Post">
                                                    <i class="bi bi-pencil-fill"></i>
                                                </a>

                                                @if (item.Status == TourismWeb.Models.PostStatus.Pending)
                                                {
                                                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post"
                                                        style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-sm btn-outline-success"
                                                            title="Approve Post">
                                                            <i class="bi bi-check-lg"></i>
                                                        </button>
                                                    </form>
                                                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post"
                                                        style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-sm btn-outline-danger"
                                                            title="Reject Post">
                                                            <i class="bi bi-x-lg"></i>
                                                        </button>
                                                    </form>
                                                }
                                                else if (item.Status == TourismWeb.Models.PostStatus.Approved)
                                                {
                                                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post"
                                                        style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-sm btn-outline-danger"
                                                            title="Reject Post">
                                                            <i class="bi bi-x-lg"></i>
                                                        </button>
                                                    </form>
                                                }
                                                else if (item.Status == TourismWeb.Models.PostStatus.Rejected)
                                                {
                                                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post"
                                                        style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-sm btn-outline-success"
                                                            title="Approve Post">
                                                            <i class="bi bi-check-lg"></i>
                                                        </button>
                                                    </form>
                                                }

                                                <a asp-action="Delete" asp-route-id="@item.PostId"
                                                    class="btn btn-sm btn-outline-danger" title="Delete Post">
                                                    <i class="bi bi-trash-fill"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between align-items-center">
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Admin Layout Compatible Styles */
    .content-wrapper {
        padding: 20px 20px;
        margin-left: 120px;


        background-color: #f8f9fa;
        min-height: calc(100vh - 60px);
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    /* Create Button */
    .create-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        font-weight: 500;
        background-color: #2563eb;
        border-color: #2563eb;
    }

    .create-btn:hover {
        background-color: #1d4ed8;
        border-color: #1d4ed8;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    /* Filter Tabs */
    .filter-tabs {
        display: flex;
        gap: 1rem;
        margin-top: 1rem;
    }

    .filter-tab {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        background-color: #fff;
        border-radius: 0.5rem;
        color: #64748b;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .filter-tab:hover {
        background-color: #f1f5f9;
        color: #334155;
        text-decoration: none;
    }

    .filter-tab.active {
        background-color: #2563eb;
        color: white;
    }

    .filter-tab i {
        font-size: 1.1rem;
    }

    .filter-tab .badge {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 9999px;
    }

    .pending-tab .badge {
        background-color: #f59e0b;
    }

    .approved-tab .badge {
        background-color: #10b981;
    }

    .rejected-tab .badge {
        background-color: #ef4444;
    }

    /* Card Styling */
    .card {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
        margin-bottom: 1.5rem;
    }

    .card-header {
        background-color: #fff;
        border-bottom: 1px solid #e5e7eb;
        padding: 1rem 1.25rem;
    }

    .card-footer {
        background-color: #fff;
        border-top: 1px solid #e5e7eb;
        padding: 1rem 1.25rem;
    }

    /* Search Box */
    .search-box {
        position: relative;
        width: 250px;
    }

    .search-box input {
        padding-right: 2.5rem;
        border-radius: 1rem;
        border: 5px solid #d1d5db;
    }

    .search-box i {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #9ca3af;
    }

    /* Table Styling */
    .table {
        margin-bottom: 0;
    }

    .table thead th {
        background-color: #f8fafc;
        color: #64748b;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        padding: 0.75rem 1.25rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .table tbody td {
        padding: 1rem 1.25rem;
        vertical-align: middle;
        border-bottom: 1px solid #e5e7eb;
    }

    .table tbody tr:last-child td {
        border-bottom: none;
    }

    .table tbody tr:hover {
        background-color: #f1f5f9;
    }

    /* User Info */
    .user-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .user-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-color: #2563eb;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }

    /* Date and Time Info */
    .date-info,
    .time-info {
        display: flex;
        align-items: center;
        gap: 0.375rem;
        color: #64748b;
        font-size: 0.875rem;
    }

    .date-info {
        margin-bottom: 0.25rem;
    }

    /* Status Badge */
    .badge {
        padding: 0.35em 0.65em;
        font-weight: 600;
        font-size: 0.75rem;
        border-radius: 0.25rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.375rem;
    }

    .action-buttons .btn {
        padding: 0.25rem 0.5rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
    }

    .action-buttons .btn i {
        font-size: 0.875rem;
    }

    /* Pagination */
    .pagination {
        margin-bottom: 0;
    }

    .pagination .page-link {
        color: #64748b;
        padding: 0.375rem 0.75rem;
        border-color: #e5e7eb;
    }

    .pagination .page-item.active .page-link {
        background-color: #2563eb;
        border-color: #2563eb;
    }

    .pagination-info {
        color: #64748b;
        font-size: 0.875rem;
    }

    /* Title Cell */
    .title-cell {
        max-width: 250px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Responsive Adjustments */
    media (max-width: 992px) {
        .filter-tabs {
            overflow-x: auto;
            padding-bottom: 0.5rem;
            flex-wrap: nowrap;
        }

        .filter-tab {
            white-space: nowrap;
        }

        .card-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .search-box {
            width: 100%;
        }
    }

    media (max-width: 768px) {
        .table-responsive {
            border: 0;
        }

        .card-footer {
            flex-direction: column;
            gap: 1rem;
        }

        .pagination {
            margin-top: 0.5rem;
        }
    }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"> *@


@model IEnumerable<TourismWeb.Models.Post>

@{
    ViewData["Title"] = "Quản Lý Bài Viết";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/cssadmin/posts.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/cssadmin/styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .app-container {
            padding: 25px;
            background: linear-gradient(135deg, #f2f7ff 0%, #e6f7ff 100%);
            min-height: 100vh;
        }
        
        .main-content {
            background-color: #fff;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            overflow: hidden;
            border: 1px solid rgba(78, 115, 223, 0.1);
        }
        
        .content-wrapper {
            padding: 30px;
            position: relative;
        }
        
        .toggle-sidebar {
            position: absolute;
            left: 30px;
            top: 30px;
            background: #6e47ef;
            border: none;
            font-size: 18px;
            color: white;
            cursor: pointer;
            z-index: 5;
            height: 40px;
            width: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 10px rgba(110, 71, 239, 0.3);
            transition: all 0.3s ease;
        }
        
        .toggle-sidebar:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(110, 71, 239, 0.4);
        }
        
        .page-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #f0f3f9;
            margin-left: 60px;
        }
        
        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: #2c3e50;
            margin: 0;
            background: linear-gradient(45deg, #3a416f, #6e47ef);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .page-actions {
            display: flex;
            gap: 15px;
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #6e47ef, #7f69fa);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 50px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: all 0.3s;
            box-shadow: 0 4px 15px rgba(110, 71, 239, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(110, 71, 239, 0.4);
            background: linear-gradient(45deg, #5d3bd7, #6e47ef);
        }
        
        .filter-card {
            background-color: #fff;
            padding: 20px;
            border-radius: 16px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.04);
            border: 1px solid #f0f3f9;
        }
        
        .btn-group {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .btn-group .btn {
            padding: 10px 20px;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-outline-primary {
            color: #6e47ef;
            border: 2px solid #6e47ef;
            background-color: transparent;
        }
        
        .btn-outline-primary:hover, .btn-outline-primary.active {
            background: linear-gradient(45deg, #6e47ef, #7f69fa);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(110, 71, 239, 0.3);
        }
        
        .btn-outline-warning {
            color: #f6c23e;
            border: 2px solid #f6c23e;
            background-color: transparent;
        }
        
        .btn-outline-warning:hover, .btn-outline-warning.active {
            background: linear-gradient(45deg, #f6c23e, #ffb347);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(246, 194, 62, 0.3);
        }
        
        .btn-outline-success {
            color: #1cc88a;
            border: 2px solid #1cc88a;
            background-color: transparent;
        }
        
        .btn-outline-success:hover, .btn-outline-success.active {
            background: linear-gradient(45deg, #1cc88a, #2ecc71);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(28, 200, 138, 0.3);
        }
        
        .btn-outline-danger {
            color: #e74a3b;
            border: 2px solid #e74a3b;
            background-color: transparent;
        }
        
        .btn-outline-danger:hover, .btn-outline-danger.active {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(231, 74, 59, 0.3);
        }
        
        .table-card {
            background-color: #fff;
            border-radius: 16px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.05);
            overflow: hidden;
            border: 1px solid #f0f3f9;
        }
        
        .table-responsive {
            overflow-x: auto;
            min-height: 0.01%;
            padding: 5px;
        }
        
        .data-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }
        
        .data-table thead {
            background: linear-gradient(45deg, #f8f9fc, #f0f3f9);
        }
        
        .data-table th {
            padding: 18px;
            font-weight: 700;
            color: #4a5568;
            text-align: left;
            border-bottom: 2px solid #e9ecef;
            white-space: nowrap;
            position: relative;
        }
        
        .data-table th:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(to right, #6e47ef, transparent);
            opacity: 0.2;
        }
        
        .data-table td {
            padding: 18px;
            vertical-align: middle;
            border-bottom: 1px solid #f0f3f9;
            transition: all 0.3s;
        }
        
        .data-row {
            transition: all 0.3s ease;
        }
        
        .data-row:hover {
            background-color: #f8f9fc;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.03);
            z-index: 1;
            position: relative;
        }
        
        .table-title-cell {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 6px;
            font-size: 15px;
        }
        
        .table-content-preview {
            font-size: 13px;
            color: #718096;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            max-width: 300px;
            line-height: 1.5;
        }
        
        .badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            border-radius: 50px;
            font-size: 12px;
            font-weight: 600;
            letter-spacing: 0.5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .badge.green {
            background: linear-gradient(45deg, rgba(28, 200, 138, 0.1), rgba(46, 204, 113, 0.1));
            color: #1cc88a;
            border: 1px solid rgba(28, 200, 138, 0.2);
        }
        
        .badge.yellow {
            background: linear-gradient(45deg, rgba(246, 194, 62, 0.1), rgba(255, 179, 71, 0.1));
            color: #f6c23e;
            border: 1px solid rgba(246, 194, 62, 0.2);
        }
        
        .badge.red {
            background: linear-gradient(45deg, rgba(231, 74, 59, 0.1), rgba(255, 82, 82, 0.1));
            color: #e74a3b;
            border: 1px solid rgba(231, 74, 59, 0.2);
        }
        
        .badge.blue {
            background: linear-gradient(45deg, rgba(78, 115, 223, 0.1), rgba(110, 71, 239, 0.1));
            color: #4e73df;
            border: 1px solid rgba(78, 115, 223, 0.2);
        }
        
        .badge.amber {
            background: linear-gradient(45deg, rgba(255, 152, 0, 0.1), rgba(255, 177, 66, 0.1));
            color: #ff9800;
            border: 1px solid rgba(255, 152, 0, 0.2);
        }
        
        .badge.gray {
            background: linear-gradient(45deg, rgba(108, 117, 125, 0.1), rgba(134, 142, 150, 0.1));
            color: #6c757d;
            border: 1px solid rgba(108, 117, 125, 0.2);
        }
        
        .actions-cell {
            white-space: nowrap;
            display: flex;
            gap: 8px;
            justify-content: flex-start;
        }
        
        .action-btn {
            width: 36px;
            height: 36px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            color: #fff;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
            box-shadow: 0 3px 8px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .action-btn:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.1);
            transform: translateY(-100%);
            transition: all 0.3s;
        }
        
        .action-btn:hover:before {
            transform: translateY(0);
        }
        
        .action-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }
        
        .view-btn {
            background: linear-gradient(45deg, #36b9cc, #4cc3d9);
        }
        
        .view-btn:hover {
            background: linear-gradient(45deg, #2c9faf, #36b9cc);
        }
        
        .edit-btn {
            background: linear-gradient(45deg, #4e73df, #6e47ef);
        }
        
        .edit-btn:hover {
            background: linear-gradient(45deg, #3a5ccc, #4e73df);
        }
        
        .approve-btn {
            background: linear-gradient(45deg, #1cc88a, #2ecc71);
        }
        
        .approve-btn:hover {
            background: linear-gradient(45deg, #17a673, #1cc88a);
        }
        
        .reject-btn {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
        }
        
        .reject-btn:hover {
            background: linear-gradient(45deg, #d52a1a, #e74a3b);
        }
        
        .delete-btn {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
        }
        
        .delete-btn:hover {
            background: linear-gradient(45deg, #d52a1a, #e74a3b);
        }
        
        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }
            
            .actions-cell {
                flex-wrap: wrap;
            }
        }
        
        @@media (max-width: 768px) {
            .data-table th, .data-table td {
                padding: 12px 10px;
            }
            
            .table-content-preview {
                max-width: 200px;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/js/jsadmin/posts.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle sidebar functionality
            const toggleBtn = document.querySelector('.toggle-sidebar');
            toggleBtn.addEventListener('click', function() {
                document.body.classList.toggle('sidebar-collapsed');
                this.classList.toggle('active');
            });
            
            // Add hover effects and animation to table rows
            const dataRows = document.querySelectorAll('.data-row');
            dataRows.forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f8f9fc';
                    this.style.transform = 'translateY(-2px)';
                    this.style.boxShadow = '0 5px 15px rgba(0,0,0,0.03)';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                    this.style.transform = '';
                    this.style.boxShadow = '';
                });
            });
            
            // Add tooltip functionality for buttons
            const actionBtns = document.querySelectorAll('.action-btn');
            actionBtns.forEach(btn => {
                const title = btn.getAttribute('title');
                if (title) {
                    const tooltip = document.createElement('div');
                    tooltip.className = 'tooltip';
                    tooltip.textContent = title;
                    btn.appendChild(tooltip);
                    
                    btn.addEventListener('mouseenter', function() {
                        tooltip.style.opacity = '1';
                        tooltip.style.transform = 'translateY(-5px)';
                    });
                    
                    btn.addEventListener('mouseleave', function() {
                        tooltip.style.opacity = '0';
                        tooltip.style.transform = 'translateY(0)';
                    });
                }
            });
            
            // Add pulse animation to status badges
            const badges = document.querySelectorAll('.badge');
            badges.forEach(badge => {
                badge.style.position = 'relative';
                badge.style.overflow = 'hidden';
                
                const ripple = document.createElement('span');
                ripple.className = 'ripple';
                badge.appendChild(ripple);
                
                badge.addEventListener('mouseenter', function() {
                    ripple.style.animation = 'ripple 1s';
                });
                
                badge.addEventListener('mouseleave', function() {
                    ripple.style.animation = '';
                });
            });
        });
    </script>
    <style>
        @@keyframes ripple {
            0% {
                width: 0;
                height: 0;
                opacity: 0.8;
            }
            100% {
                width: 200px;
                height: 200px;
                opacity: 0;
            }
        }
        
        .ripple {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            pointer-events: none;
        }
        
        .tooltip {
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%) translateY(0);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 12px;
            white-space: nowrap;
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s;
            z-index: 10;
            margin-bottom: 8px;
        }
        
        .tooltip:after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            border-width: 5px;
            border-style: solid;
            border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
        }
        
        .toggle-sidebar.active {
            background: linear-gradient(45deg, #4e73df, #6e47ef);
            transform: rotate(90deg);
        }
    </style>
}

<div class="app-container">
    <div class="main-content">
        <main class="content-wrapper">
            <button class="toggle-sidebar">
                <i class="fas fa-bars"></i>
            </button>

            <div class="page-header">
                <h1 class="page-title">Quản Lý Bài Viết</h1>
            </div>

            <div class="filter-card">
                <div class="btn-group" role="group">
                    <a asp-action="Moderate" class="btn btn-outline-primary @(ViewContext.RouteData.Values["status"] == null ? "active" : "")">Tất cả</a>
                    <a asp-action="Moderate" asp-route-status="Pending" class="btn btn-outline-warning @(ViewContext.RouteData.Values["status"]?.ToString() == "Pending" ? "active" : "")">Chờ duyệt</a>
                    <a asp-action="Moderate" asp-route-status="Approved" class="btn btn-outline-success @(ViewContext.RouteData.Values["status"]?.ToString() == "Approved" ? "active" : "")">Đã duyệt</a>
                    <a asp-action="Moderate" asp-route-status="Rejected" class="btn btn-outline-danger @(ViewContext.RouteData.Values["status"]?.ToString() == "Rejected" ? "active" : "")">Từ chối</a>
                </div>
            </div>

            <div class="table-card">
                <div class="table-responsive">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th style="width: 5%">STT</th>
                                <th style="width: 20%">Tiêu đề</th>
                                <th style="width: 12%">Loại</th>
                                <th style="width: 15%">Địa điểm</th>
                                <th style="width: 18%">Tác giả</th>
                                <th style="width: 10%">Ngày đăng</th>
                                <th style="width: 10%">Trạng thái</th>
                                <th style="width: 10%">Hành động</th>
                            </tr>
                        </thead>
                       <tbody>
    @{
        int index = 1; // Khởi tạo biến đếm
    }
    @foreach (var item in Model)
    {
        var badgeClass = item.Status switch
        {
            TourismWeb.Models.PostStatus.Pending => "badge yellow",
            TourismWeb.Models.PostStatus.Approved => "badge green",
            TourismWeb.Models.PostStatus.Rejected => "badge red",
            _ => "badge gray"
        };

        var typeBadgeClass = item.TypeOfPost switch
        {
            "Địa điểm" => "badge blue",
            "Cẩm nang" => "badge green",
            "Trải nghiệm" => "badge amber",
            _ => "badge gray"
        };

        <tr class="data-row">
            <td>@index</td> <!-- Hiển thị số thứ tự -->
            <td>
                <div class="table-title-cell">@item.Title</div>
                <div class="table-content-preview">@item.Content?.Substring(0, Math.Min(100, item.Content.Length))...</div>
            </td>
            <td>
                <span class="@typeBadgeClass">
                    @if (item.TypeOfPost == "Địa điểm")
                    {
                        @:<i class="fas fa-map-marker-alt"></i> Địa điểm
                    }
                    else if (item.TypeOfPost == "Cẩm nang")
                    {
                        @:<i class="fas fa-book"></i> Cẩm nang
                    }
                    else
                    {
                        @:<i class="fas fa-star"></i> Trải nghiệm
                    }
                </span>
            </td>
            <td>@item.Spot?.Name</td>
            <td>@item.User?.FullName</td>
            <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
            <td><span class="@badgeClass">@item.Status</span></td>
            <td class="actions-cell">
                <a asp-action="Details" asp-route-id="@item.PostId" class="action-btn view-btn" title="Xem"><i class="fas fa-eye"></i></a>
                <a asp-action="Edit" asp-route-id="@item.PostId" class="action-btn edit-btn" title="Sửa"><i class="fas fa-edit"></i></a>

                @if (item.Status == TourismWeb.Models.PostStatus.Pending)
                {
                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn approve-btn" title="Duyệt"><i class="fas fa-check"></i></button>
                    </form>
                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn reject-btn" title="Từ chối"><i class="fas fa-times"></i></button>
                    </form>
                }
                else if (item.Status == TourismWeb.Models.PostStatus.Approved)
                {
                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn reject-btn" title="Từ chối"><i class="fas fa-times"></i></button>
                    </form>
                }
                else if (item.Status == TourismWeb.Models.PostStatus.Rejected)
                {
                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn approve-btn" title="Duyệt"><i class="fas fa-check"></i></button>
                    </form>
                }

                <a asp-action="Delete" asp-route-id="@item.PostId" class="action-btn delete-btn" title="Xóa"><i class="fas fa-trash"></i></a>
            </td>
        </tr>
        index++; // Tăng số thứ tự sau mỗi bài viết
    }
</tbody>

                    </table>
                </div>
            </div>
        </main>
    </div>
</div>