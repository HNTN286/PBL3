@model List<TourismWeb.Models.ViewModels.AdminCommentViewModel>

@section Styles {
    <link rel="stylesheet" href="~/cssadmin/comments.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .nav-tabs {
            border-bottom: 1px solid #dee2e6;
            margin-bottom: 20px;
        }
        .nav-tabs .nav-item {
            margin-bottom: -1px;
        }
        .nav-tabs .nav-link {
            border: 1px solid transparent;
            border-top-left-radius: 0.25rem;
            border-top-right-radius: 0.25rem;
            padding: 0.75rem 1.25rem;
            font-weight: 500;
            color: #495057;
            background-color: #f8f9fa;
            transition: all 0.2s ease;
        }
        .nav-tabs .nav-link:hover {
            border-color: #e9ecef #e9ecef #dee2e6;
            background-color: #e9ecef;
        }
        .nav-tabs .nav-link.active {
            color: #0d6efd;
            background-color: #fff;
            border-color: #dee2e6 #dee2e6 #fff;
            font-weight: 600;
        }
        .tab-content {
            padding-top: 15px;
        }
        .tab-pane {
            display: none;
        }
        .tab-pane.active {
            display: block;
        }
    </style>
}

@section Scripts {
    @* <script src="~/js/jsadmin/comments.js"></script> *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
  // Tabs Navigation - Phiên bản đã sửa
  const tabButtons = document.querySelectorAll(".tab-list button");

  console.log("Script quản lý bình luận đã được khởi tạo");
  console.log("Số lượng nút tab tìm thấy:", tabButtons.length);

  tabButtons.forEach((button) => {
    button.addEventListener("click", function (e) {
      e.preventDefault();

      console.log("Tab button clicked:", this.id); // Debug để kiểm tra event có hoạt động

      // 1. Bỏ active khỏi tất cả các tab
      tabButtons.forEach((tab) => {
        tab.classList.remove("active");
        tab.setAttribute("aria-selected", "false");
      });

      // 2. Ẩn tất cả các tab content
      document.querySelectorAll(".tab-pane").forEach((pane) => {
        pane.classList.remove("show", "active");
      });

      // 3. Active tab hiện tại
      this.classList.add("active");
      this.setAttribute("aria-selected", "true");

      // 4. Hiển thị nội dung tab tương ứng
      const targetId = this.getAttribute("data-bs-target").substring(1);
      const targetPane = document.getElementById(targetId);
      console.log("Target pane:", targetId); // Debug
      if (targetPane) {
        targetPane.classList.add("show", "active");
      } else {
        console.error("Tab content not found:", targetId);
      }
    });
  });

  // Modal elements
  const deleteModal = document.getElementById("deleteModal");
  const commentModal = document.getElementById("commentModal");
  const confirmDeleteButton = document.getElementById("confirmDelete");
  const cancelDeleteButton = document.getElementById("cancelDelete");

  // Lấy tất cả các nút đóng modal
  const modalCloseButtons = document.querySelectorAll(
    ".modal-close, #cancelDelete, .modal-close-btn"
  );

  let itemToDeleteId = null;
  let itemToDeleteType = null;

  // --- REVIEWS FILTERING LOGIC ---
  const reviewSearchInput = document.getElementById("reviewSearchInput");
  const reviewRatingFilter = document.getElementById("reviewRatingFilter");
  const applyReviewFiltersBtn = document.getElementById(
    "applyReviewFiltersBtn"
  );

  applyReviewFiltersBtn.addEventListener("click", function () {
    const searchText = reviewSearchInput.value.toLowerCase();
    const selectedRating = reviewRatingFilter.value;
    const tableRows = document.querySelectorAll("#reviewsTable tbody tr");

    tableRows.forEach((row) => {
      if (row.querySelector('td[colspan="7"]')) {
        // Skip "no data" row
        row.style.display = "";
        return;
      }

      const userName =
        row.cells[0].querySelector(".user-name")?.textContent.toLowerCase() ||
        "";
      const userEmail =
        row.cells[0].querySelector(".user-email")?.textContent.toLowerCase() ||
        "";
      const contentData =
        row.cells[1]
          .querySelector(".comment-content")
          ?.textContent.toLowerCase() || "";
      const rowRating = row.dataset.rating;

      let show = true;

      // Search text filter
      if (
        searchText &&
        !(
          userName.includes(searchText) ||
          userEmail.includes(searchText) ||
          contentData.includes(searchText)
        )
      ) {
        show = false;
      }
      // Rating filter
      if (selectedRating !== "all" && rowRating !== selectedRating) {
        show = false;
      }

      row.style.display = show ? "" : "none";
    });
  });

  // --- COMMENTS FILTERING LOGIC ---
  const commentSearchInput = document.getElementById("commentSearchInput");
  const commentTypeFilter = document.getElementById("commentTypeFilter");
  const applyCommentFiltersBtn = document.getElementById(
    "applyCommentFiltersBtn"
  );

  applyCommentFiltersBtn.addEventListener("click", function () {
    const searchText = commentSearchInput.value.toLowerCase();
    const selectedType = commentTypeFilter.value;
    const tableRows = document.querySelectorAll("#commentsTable tbody tr");

    tableRows.forEach((row) => {
      if (row.querySelector('td[colspan="7"]')) {
        // Skip "no data" row
        row.style.display = "";
        return;
      }

      const userName =
        row.cells[0].querySelector(".user-name")?.textContent.toLowerCase() ||
        "";
      const userEmail =
        row.cells[0].querySelector(".user-email")?.textContent.toLowerCase() ||
        "";
      const contentData =
        row.cells[1]
          .querySelector(".comment-content")
          ?.textContent.toLowerCase() || "";
      const rowPostType = row.dataset.postType;

      let show = true;

      // Search text filter
      if (
        searchText &&
        !(
          userName.includes(searchText) ||
          userEmail.includes(searchText) ||
          contentData.includes(searchText)
        )
      ) {
        show = false;
      }
      // Post type filter
      if (selectedType !== "all" && rowPostType !== selectedType) {
        show = false;
      }

      row.style.display = show ? "" : "none";
    });
  });

  // --- VIEW DETAIL MODAL LOGIC ---
  document.querySelectorAll(".view-btn-trigger").forEach((button) => {
    button.addEventListener("click", function (e) {
      e.preventDefault();

      // Lấy dữ liệu từ thuộc tính data-
      const id = this.getAttribute("data-id");
      const userName = this.getAttribute("data-user-name");
      const userEmail = this.getAttribute("data-user-email");
      const userAvatar = this.getAttribute("data-user-avatar");
      const itemTitle = this.getAttribute("data-item-title");
      const itemUrl = this.getAttribute("data-item-url");
      const content = this.getAttribute("data-content");
      const rating = this.getAttribute("data-rating");
      const createdAt = this.getAttribute("data-created-at");
      const itemType = this.getAttribute("data-item-type");
      const itemTypeDetail = this.getAttribute("data-item-type-detail");
      const imageUrl = this.getAttribute("data-image-url");

      // Cập nhật nội dung modal
      document.querySelector("#modal-user-avatar").src = userAvatar;
      document.querySelector(".user-name").textContent = userName;
      document.querySelector(".user-email").textContent = userEmail;
      document.querySelector(".comment-post-title").textContent = itemTitle;
      document.querySelector(".comment-post-link").href = itemUrl;
      document.querySelector(".comment-post-type-detail").textContent =
        itemTypeDetail ? `(${itemTypeDetail})` : "";
      document.querySelector(".comment-body-content").innerHTML = content;
      document.querySelector(".date-value").textContent = createdAt;

      // Hiển thị/ẩn rating dựa vào loại item
      const ratingDisplay = document.querySelector(".rating-display");
      if (itemType === "Review" && rating) {
        ratingDisplay.style.display = "block";

        // Tạo stars
        const starsContainer = document.querySelector(".stars-container");
        starsContainer.innerHTML = "";

        const ratingValue = parseFloat(rating);
        for (let i = 1; i <= 5; i++) {
          const starIcon = document.createElement("i");
          if (i <= ratingValue) {
            starIcon.className = "fas fa-star text-warning";
          } else if (i - 0.5 === ratingValue) {
            starIcon.className = "fas fa-star-half-alt text-warning";
          } else {
            starIcon.className = "far fa-star text-warning";
          }
          starsContainer.appendChild(starIcon);
        }

        document.querySelector(".rating-value").textContent =
          ratingValue.toFixed(1);
      } else {
        ratingDisplay.style.display = "none";
      }

      // Hiển thị/ẩn ảnh nếu có
      const imageContainer = document.querySelector(".comment-image-container");
      const modalImage = document.querySelector(".modal-comment-image");

      if (
        imageUrl &&
        imageUrl !== "/images/default-postImage.png" &&
        imageUrl.startsWith("/")
      ) {
        imageContainer.style.display = "block";
        modalImage.src = imageUrl;
        modalImage.alt =
          itemType === "Review" ? "Ảnh đánh giá" : "Ảnh bình luận";
      } else {
        imageContainer.style.display = "none";
      }

      // Hiển thị modal
      commentModal.style.display = "block";
    });
  });

  // --- DELETE MODAL LOGIC ---
  document.querySelectorAll(".delete-btn-trigger").forEach((button) => {
    button.addEventListener("click", function (e) {
      e.preventDefault();

      // Lấy ID và loại của item cần xóa
      itemToDeleteId = this.getAttribute("data-id");
      itemToDeleteType = this.getAttribute("data-item-type");

      // Cập nhật thông báo xác nhận
      const deleteMessage =
        itemToDeleteType === "Review"
          ? "Bạn có chắc chắn muốn xóa đánh giá này?"
          : "Bạn có chắc chắn muốn xóa bình luận này?";

      document.getElementById("deleteModalMessage").textContent = deleteMessage;

      // Hiển thị modal xóa
      deleteModal.style.display = "block";
    });
  });

  // Xử lý xác nhận xóa
  confirmDeleteButton.addEventListener("click", function () {
    if (itemToDeleteId && itemToDeleteType) {
      // Gửi request AJAX để xóa item
      const token = document.querySelector(
        'input[name="__RequestVerificationToken"]'
      ).value;

      fetch("/Admin/DeleteComment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          RequestVerificationToken: token,
        },
        body: JSON.stringify({
          id: itemToDeleteId,
          type: itemToDeleteType,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            // Xóa dòng tương ứng trên bảng
            const rows = document.querySelectorAll(
              `[data-id="${itemToDeleteId}"]`
            );
            rows.forEach((r) => {
              const parentRow = r.closest("tr");
              if (parentRow) {
                parentRow.remove();
              }
            });

            // Kiểm tra nếu không còn dòng nào, hiển thị thông báo "không có dữ liệu"
            const reviewsTable = document.getElementById("reviewsTable");
            const commentsTable = document.getElementById("commentsTable");

            if (itemToDeleteType === "Review") {
              const remainingReviews = reviewsTable.querySelectorAll(
                'tbody tr:not([style*="display: none"])'
              );
              if (remainingReviews.length === 0) {
                const noDataRow = document.createElement("tr");
                noDataRow.innerHTML =
                  '<td colspan="7" class="text-center" style="padding: 20px;">Không có đánh giá nào.</td>';
                reviewsTable.querySelector("tbody").appendChild(noDataRow);
              }
            } else {
              const remainingComments = commentsTable.querySelectorAll(
                'tbody tr:not([style*="display: none"])'
              );
              if (remainingComments.length === 0) {
                const noDataRow = document.createElement("tr");
                noDataRow.innerHTML =
                  '<td colspan="7" class="text-center" style="padding: 20px;">Không có bình luận nào.</td>';
                commentsTable.querySelector("tbody").appendChild(noDataRow);
              }
            }

            // Hiển thị thông báo thành công
            showToast("Xóa thành công", "success");
          } else {
            // Hiển thị thông báo lỗi
            showToast(
              "Có lỗi xảy ra: " + (data.message || "Không thể xóa mục này"),
              "error"
            );
          }

          // Đóng modal
          deleteModal.style.display = "none";
        })
        .catch((error) => {
          console.error("Error:", error);
          showToast("Có lỗi xảy ra khi xóa mục", "error");
          deleteModal.style.display = "none";
        });
    }
  });

  // --- MODAL CONTROL LOGIC ---

  // Đóng các modal khi click vào nút đóng
  modalCloseButtons.forEach((button) => {
    button.addEventListener("click", function () {
      commentModal.style.display = "none";
      deleteModal.style.display = "none";
    });
  });

  // Đóng modal khi click ra ngoài
  window.addEventListener("click", function (e) {
    if (e.target === commentModal) {
      commentModal.style.display = "none";
    }
    if (e.target === deleteModal) {
      deleteModal.style.display = "none";
    }
  });

  // Hàm hiển thị thông báo toast
  function showToast(message, type) {
    // Kiểm tra nếu đã có container toast
    let toastContainer = document.querySelector(".toast-container");
    if (!toastContainer) {
      toastContainer = document.createElement("div");
      toastContainer.className = "toast-container";
      document.body.appendChild(toastContainer);
    }

    // Tạo toast mới
    const toast = document.createElement("div");
    toast.className = `toast ${type}`;
    toast.innerHTML = `
          <div class="toast-content">
              <i class="${
                type === "success"
                  ? "fas fa-check-circle"
                  : "fas fa-exclamation-circle"
              }"></i>
              <span>${message}</span>
          </div>
          <button class="toast-close">&times;</button>
      `;

    // Thêm toast vào container
    toastContainer.appendChild(toast);

    // Hiển thị toast với animation
    setTimeout(() => {
      toast.classList.add("show");
    }, 10);

    // Tự động đóng toast sau 3 giây
    setTimeout(() => {
      toast.classList.remove("show");
      setTimeout(() => {
        toast.remove();
      }, 300);
    }, 3000);

    // Xử lý nút đóng toast
    toast.querySelector(".toast-close").addEventListener("click", function () {
      toast.classList.remove("show");
      setTimeout(() => {
        toast.remove();
      }, 300);
    });
  }
});
</script>
}


@{
    ViewData["Title"] = "Đánh Giá & Bình Luận - Hệ Thống Quản Trị";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@Html.AntiForgeryToken() 

<div class="app-container">
    <div class="main-content">
        <main class="content-wrapper">
            <div class="page-header">
                <h1 class="page-title">Đánh Giá & Bình Luận</h1>
            </div>

            <ul class="tab-list">
                <li>
                    <button class="active" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="true">
                        <i class="fas fa-star"></i>Đánh Giá (Địa điểm)
                    </button>
                </li>
                <li>
                    <button id="comments-tab" data-bs-toggle="tab" data-bs-target="#comments" type="button" role="tab" aria-controls="comments" aria-selected="false">
                        <i class="fas fa-comment"></i>Bình Luận (Bài viết)
                    </button>
                </li>
            </ul>

            <div class="tab-content" id="commentTabsContent">
                <!-- TAB 1: REVIEWS -->
                <div class="tab-pane fade show active" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                    <div class="filter-card">
                        <div class="filter-grid">
                            <div class="filter-item">
                                <div class="search-input">
                                    <i class="fas fa-search"></i>
                                    <input type="text" id="reviewSearchInput" placeholder="Tìm nội dung, người dùng...">
                                </div>
                            </div>
                            <div class="filter-item">
                                <select id="reviewRatingFilter" class="select-control">
                                    <option value="all">Tất cả đánh giá (sao)</option>
                                    <option value="5">5 sao</option>
                                    <option value="4">4 sao</option>
                                    <option value="3">3 sao</option>
                                    <option value="2">2 sao</option>
                                    <option value="1">1 sao</option>
                                </select>
                            </div>
                            <div class="filter-item">
                                <button class="btn btn-filter" id="applyReviewFiltersBtn">
                                    <i class="fas fa-filter"></i>
                                    Lọc
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="table-card">
                        <div class="table-responsive">
                            <table class="data-table" id="reviewsTable">
                                <thead>
                                    <tr>
                                        <th>Người dùng</th>
                                        <th>Nội dung</th>
                                        <th>Ảnh đánh giá</th>
                                        <th>Địa điểm</th>
                                        <th>Đánh giá (Sao)</th>
                                        <th>Ngày đăng</th>
                                        <th>Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var reviews = Model.Where(x => x.ItemType == "Review").ToList();
                                        if (reviews == null || !reviews.Any())
                                        {
                                            <tr>
                                                <td colspan="7" class="text-center" style="padding: 20px;">Không có đánh giá nào.</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            foreach (var item in reviews)
                                            {
                                                <tr data-item-type="@item.ItemType" data-rating="@(item.Rating.HasValue ? item.Rating.Value.ToString() : "")">
                                                    <td>
                                                        <div class="user-cell">
                                                            <div class="user-avatar">
                                                                <img src="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))" alt="Avatar">
                                                            </div>
                                                            <div class="user-info">
                                                                <div class="user-name">@item.UserFullName</div>
                                                                <div class="user-email">@item.UserEmail</div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="comment-content">
                                                            @Html.Raw(item.Content?.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)
                                                            @if (item.Content?.Length > 100)
                                                            {
                                                                <a href="#" class="view-btn-trigger"
                                                                   data-id="@item.Id"
                                                                   data-user-name="@item.UserFullName"
                                                                   data-user-email="@item.UserEmail"
                                                                   data-user-avatar="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))"
                                                                   data-item-title="@item.RelatedItemTitle"
                                                                   data-item-url="@Url.Action("Details", item.RelatedItemController, new { id = item.RelatedItemId })"
                                                                   data-content="@Html.Raw(item.Content)"
                                                                   data-rating="@item.Rating"
                                                                   data-created-at="@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")"
                                                                   data-item-type="@item.ItemType"
                                                                   data-item-type-detail="@item.RelatedItemTypeDetail"
                                                                   data-image-url="@item.ImageUrl"
                                                                   title="Xem đầy đủ">Xem thêm</a>
                                                            }
                                                        </div>
                                                    </td>
                                                    <td>
                                                        @if (!string.IsNullOrEmpty(item.ImageUrl) && item.ImageUrl != "/images/default-postImage.png" && item.ImageUrl.StartsWith("/"))
                                                        {
                                                            <img src="@Url.Content(item.ImageUrl)" alt="Ảnh đánh giá" style="max-width: 100px; max-height: 70px; cursor: pointer; border-radius: 4px;" onclick="window.open('@Url.Content(item.ImageUrl)', '_blank');" />
                                                        }
                                                        else
                                                        {
                                                            <span>Không có</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <a asp-controller="@item.RelatedItemController" asp-action="Details" asp-route-id="@item.RelatedItemId" class="post-link" target="_blank">
                                                            @item.RelatedItemTitle
                                                        </a>
                                                    </td>
                                                    <td>
                                                        @if (item.Rating.HasValue)
                                                        {
                                                            <div class="rating">
                                                                @for (int i = 1; i <= 5; i++)
                                                                {
                                                                    if (i <= item.Rating.Value)
                                                                    {
                                                                        <i class="fas fa-star text-warning"></i>
                                                                    }
                                                                    else if (i - 0.5 == item.Rating.Value) // For half stars if needed
                                                                    {
                                                                        <i class="fas fa-star-half-alt text-warning"></i>
                                                                    }
                                                                    else
                                                                    {
                                                                        <i class="far fa-star text-warning"></i>
                                                                    }
                                                                }
                                                                <span class="rating-text">@item.Rating.Value.ToString("0.0")</span>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <span>N/A</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <div class="date-cell">
                                                            <i class="fas fa-clock"></i>
                                                            @item.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                                        </div>
                                                    </td>
                                                    <td class="actions-cell">
                                                        <button class="action-btn view-btn-trigger" title="Xem chi tiết"
                                                                data-id="@item.Id"
                                                                data-user-name="@item.UserFullName"
                                                                data-user-email="@item.UserEmail"
                                                                data-user-avatar="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))"
                                                                data-item-title="@item.RelatedItemTitle"
                                                                data-item-url="@Url.Action("Details", item.RelatedItemController, new { id = item.RelatedItemId })"
                                                                data-content="@Html.Raw(item.Content)"
                                                                data-rating="@item.Rating"
                                                                data-created-at="@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")"
                                                                data-item-type="@item.ItemType"
                                                                data-item-type-detail="@item.RelatedItemTypeDetail"
                                                                data-image-url="@item.ImageUrl">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="action-btn delete-btn-trigger" title="Xóa" data-id="@item.Id" data-item-type="@item.ItemType">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- TAB 2: COMMENTS -->
                <div class="tab-pane fade" id="comments" role="tabpanel" aria-labelledby="comments-tab">
                    <div class="filter-card">
                        <div class="filter-grid">
                            <div class="filter-item">
                                <div class="search-input">
                                    <i class="fas fa-search"></i>
                                    <input type="text" id="commentSearchInput" placeholder="Tìm nội dung, người dùng...">
                                </div>
                            </div>
                            <div class="filter-item">
                                <select id="commentTypeFilter" class="select-control">
                                    <option value="all">Tất cả loại bài viết</option>
                                    <option value="Cẩm nang">Cẩm nang</option>
                                    <option value="Trải nghiệm">Trải nghiệm</option>
                                    <option value="Địa điểm">Địa điểm</option>
                                </select>
                            </div>
                            <div class="filter-item">
                                <button class="btn btn-filter" id="applyCommentFiltersBtn">
                                    <i class="fas fa-filter"></i>
                                    Lọc
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="table-card">
                        <div class="table-responsive">
                            <table class="data-table" id="commentsTable">
                                <thead>
                                    <tr>
                                        <th>Người dùng</th>
                                        <th>Nội dung</th>
                                        <th>Ảnh bình luận</th>
                                        <th>Bài viết</th>
                                        <th>Loại bài viết</th>
                                        <th>Ngày đăng</th>
                                        <th>Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var comments = Model.Where(x => x.ItemType == "PostComment").ToList();
                                        if (comments == null || !comments.Any())
                                        {
                                            <tr>
                                                <td colspan="7" class="text-center" style="padding: 20px;">Không có bình luận nào.</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            foreach (var item in comments)
                                            {
                                                // Lấy loại bài viết từ RelatedItemTypeDetail
                                                string postType = "Không xác định";
                                                if (item.RelatedItemTypeDetail != null)
                                                {
                                                    if (item.RelatedItemTypeDetail.Contains("Cẩm nang"))
                                                        postType = "Cẩm nang";
                                                    else if (item.RelatedItemTypeDetail.Contains("Trải nghiệm"))
                                                        postType = "Trải nghiệm";
                                                    else if (item.RelatedItemTypeDetail.Contains("Địa điểm"))
                                                        postType = "Địa điểm";
                                                }

                                                <tr data-item-type="@item.ItemType" data-post-type="@postType">
                                                    <td>
                                                        <div class="user-cell">
                                                            <div class="user-avatar">
                                                                <img src="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))" alt="Avatar">
                                                            </div>
                                                            <div class="user-info">
                                                                <div class="user-name">@item.UserFullName</div>
                                                                <div class="user-email">@item.UserEmail</div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="comment-content">
                                                            @Html.Raw(item.Content?.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)
                                                            @if (item.Content?.Length > 100)
                                                            {
                                                                <a href="#" class="view-btn-trigger"
                                                                   data-id="@item.Id"
                                                                   data-user-name="@item.UserFullName"
                                                                   data-user-email="@item.UserEmail"
                                                                   data-user-avatar="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))"
                                                                   data-item-title="@item.RelatedItemTitle"
                                                                   data-item-url="@Url.Action("Details", item.RelatedItemController, new { id = item.RelatedItemId })"
                                                                   data-content="@Html.Raw(item.Content)"
                                                                   data-rating="@item.Rating"
                                                                   data-created-at="@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")"
                                                                   data-item-type="@item.ItemType"
                                                                   data-item-type-detail="@item.RelatedItemTypeDetail"
                                                                   data-image-url="@item.ImageUrl"
                                                                   title="Xem đầy đủ">Xem thêm</a>
                                                            }
                                                        </div>
                                                    </td>
                                                    <td>
                                                        @if (!string.IsNullOrEmpty(item.ImageUrl) && item.ImageUrl != "/images/default-postImage.png" && item.ImageUrl.StartsWith("/"))
                                                        {
                                                            <img src="@Url.Content(item.ImageUrl)" alt="Ảnh bình luận" style="max-width: 100px; max-height: 70px; cursor: pointer; border-radius: 4px;" onclick="window.open('@Url.Content(item.ImageUrl)', '_blank');" />
                                                        }
                                                        else
                                                        {
                                                            <span>Không có</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <a asp-controller="@item.RelatedItemController" asp-action="Details" asp-route-id="@item.RelatedItemId" class="post-link" target="_blank">
                                                            @item.RelatedItemTitle
                                                        </a>
                                                    </td>
                                                    <td>
                                                        <span class="badge @(postType == "Cẩm nang" ? "blue" : (postType == "Trải nghiệm" ? "green" : "purple"))">
                                                            @postType
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <div class="date-cell">
                                                            <i class="fas fa-clock"></i>
                                                            @item.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                                        </div>
                                                    </td>
                                                    <td class="actions-cell">
                                                        <button class="action-btn view-btn-trigger" title="Xem chi tiết"
                                                                data-id="@item.Id"
                                                                data-user-name="@item.UserFullName"
                                                                data-user-email="@item.UserEmail"
                                                                data-user-avatar="@(string.IsNullOrEmpty(item.UserAvatar) || !item.UserAvatar.StartsWith("/") ? "/images/default-avatar.png" : Url.Content(item.UserAvatar))"
                                                                data-item-title="@item.RelatedItemTitle"
                                                                data-item-url="@Url.Action("Details", item.RelatedItemController, new { id = item.RelatedItemId })"
                                                                data-content="@Html.Raw(item.Content)"
                                                                data-rating="@item.Rating"
                                                                data-created-at="@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")"
                                                                data-item-type="@item.ItemType"
                                                                data-item-type-detail="@item.RelatedItemTypeDetail"
                                                                data-image-url="@item.ImageUrl">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="action-btn delete-btn-trigger" title="Xóa" data-id="@item.Id" data-item-type="@item.ItemType">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Comment Modal -->
<div class="modal" id="commentModal" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết Bình luận</h5>
                <button type="button" class="modal-close" aria-label="Close">&times;</button>
            </div>
            <div class="modal-body">
                <div class="user-info-container">
                    <div class="user-avatar">
                        <img src="" alt="Avatar" id="modal-user-avatar">
                    </div>
                    <div class="user-details">
                        <div class="user-name"></div>
                        <div class="user-email"></div>
                    </div>
                </div>

                <div class="comment-post-info">
                    <div><strong>Mục:</strong> <a href="#" class="comment-post-link" target="_blank"><span class="comment-post-title"></span></a> <span class="comment-post-type-detail"></span></div>
                </div>

                <div class="rating-display" style="margin-top: 15px;">
                    <strong>Đánh giá:</strong>
                    <div class="stars-container" style="display: inline-block; margin-left: 5px;"></div>
                    <span class="rating-value"></span>
                </div>

                <div class="comment-content-container">
                    <h6>Nội dung:</h6>
                    <div class="comment-body-content"></div>
                </div>

                <div class="comment-image-container" style="margin-top: 15px;">
                    <img class="modal-comment-image" style="max-width: 100%; border-radius: 5px;" />
                </div>

                <div class="date-info" style="margin-top: 15px;">
                    <i class="fas fa-clock"></i> <span class="date-value"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary modal-close-btn">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal" id="deleteModal" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="modal-close" aria-label="Close">&times;</button>
            </div>
            <div class="modal-body">
                <p id="deleteModalMessage">Bạn có chắc chắn muốn xóa mục này?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelDelete">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
            </div>
        </div>
    </div>
</div>