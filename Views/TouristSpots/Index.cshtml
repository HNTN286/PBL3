@model IEnumerable<TourismWeb.Models.TouristSpot>

@{
    ViewData["Title"] = "ƒê·ªãa ƒëi·ªÉm du l·ªãch";
    var currentSort = Context.Request.Query["sortBy"].ToString() ?? "default";
    // L·∫•y userId cho JavaScript
    var currentUserIdForJs = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0";
}

@section Styles {
    @* <link rel="stylesheet" href="~/css/spot.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <style>
        .location-favorite {
            cursor: pointer;
            /* Th√™m con tr·ªè ƒë·ªÉ ng∆∞·ªùi d√πng bi·∫øt c√≥ th·ªÉ click */
        }
    </style>
}

<!-- ƒê·∫∑t 1 l·∫ßn d∆∞·ªõi c√πng ho·∫∑c ƒë·∫ßu trang -->
<form id="antiForgeryForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

<div class="container">
    <!-- Main content -->
    <div class="main-content">
        <!-- Header section -->
        <div class="header-section">
            <h1 class="page-title">Kh√°m ph√° ƒë·ªãa ƒëi·ªÉm du l·ªãch</h1>
            <a asp-action="Create" class="create-button">
                <i class="fas fa-plus-circle"></i> Th√™m ƒë·ªãa ƒëi·ªÉm m·ªõi
            </a>
        </div>

        <!-- Sort options -->
        <div class="sort-options">
            <a asp-action="Index" asp-route-sortBy="default"
                class="sort-option @(currentSort == "default" ? "active" : "")">M·∫∑c ƒë·ªãnh</a>
            <a asp-action="Index" asp-route-sortBy="latest"
                class="sort-option @(currentSort == "latest" ? "active" : "")">M·ªõi nh·∫•t</a>
            <a asp-action="Index" asp-route-sortBy="mostLiked"
                class="sort-option @(currentSort == "mostLiked" ? "active" : "")">Y√™u th√≠ch nh·∫•t</a>
            <a asp-action="Index" asp-route-sortBy="popular"
                class="sort-option @(currentSort == "popular" ? "active" : "")">Ph·ªï bi·∫øn</a>
        </div>

        @* <!-- Locations grid -->
        <div class="locations-grid">
            @foreach (var item in Model)
            {
                <div class="location-card">
                    <div class="location-image">
                        @if (item.CreatedAt > DateTime.Now.AddDays(-7))
                        {
                            <div class="location-highlight">M·ªöI</div>
                        }
                        <img src="@item.ImageUrl" alt="@item.Name">
                        <div class="location-favorite" data-spot-id="@item.SpotId" onclick="toggleLike(this, @item.SpotId)">
                            <span class="heart-icon">@(item.IsLikedByCurrentUser ? "‚ù§Ô∏è" : "ü§ç")</span>
                        </div>
                    </div>
                    <div class="location-details">
                        <h3 class="location-name">@item.Name</h3>
                        <div class="location-meta">
                            <div class="meta-item">
                                <span class="interaction-icon">‚ù§Ô∏è</span>
                                <span class="like-count" id="like-count-@item.SpotId">@(item.Favorites?.Count ?? 0)</span>
                            </div>
                            <div class="meta-item">
                                <span>üí¨</span>
                                <span>@(item.Comments?.Count ?? 0)</span>
                            </div>
                            <div class="meta-item">
                                <span>üìç</span>
                                <span>@item.Address</span>
                            </div>
                        </div>
                        <div class="location-tags">
                            <a asp-action="Index" asp-route-categoryId="@item.CategoryId" class="tag">@item.Category.Name</a>
                            @if (item.SpotTags != null && item.SpotTags.Any())
                            {
                                @foreach (var tag in item.SpotTags.Take(2))
                                {
                                    <a asp-action="Index" asp-route-tagId="@tag.TagId" class="tag">@tag.Tag.Name</a>
                                }
                            }
                        </div>
                        <div class="location-actions">
                            <a asp-action="Details" asp-route-id="@item.SpotId" class="action-link details">
                                <i class="fas fa-info-circle"></i> Chi ti·∫øt
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.SpotId" class="action-link edit">
                                <i class="fas fa-edit"></i> S·ª≠a
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.SpotId" class="action-link delete">
                                <i class="fas fa-trash-alt"></i> X√≥a
                            </a>
                        </div>
                    </div>
                </div>
            }

            @if (!Model.Any())
            {
                <div class="empty-state">
                    <div class="empty-icon">üèùÔ∏è</div>
                    <h3>Ch∆∞a c√≥ ƒë·ªãa ƒëi·ªÉm du l·ªãch n√†o</h3>
                    <p>H√£y th√™m ƒë·ªãa ƒëi·ªÉm du l·ªãch ƒë·∫ßu ti√™n c·ªßa b·∫°n!</p>
                    <a asp-action="Create" class="btn-add-first">Th√™m ƒë·ªãa ƒëi·ªÉm</a>
                </div>
            } *@
        @* </div> *@
        <!-- Locations grid -->
        <div class="locations-grid">
            @foreach (var item in Model)
            {
                <div class="location-card" id="spot-card-@item.SpotId"> @* Th√™m ID cho card *@
                    <div class="location-image">
                        @if (item.CreatedAt > DateTime.Now.AddDays(-7))
                        {
                            <div class="location-highlight">M·ªöI</div>
                        }
                        <img src="@item.ImageUrl" alt="@item.Name">
                        <div class="location-favorite" data-spot-id="@item.SpotId"> @* B·ªè onclick ·ªü ƒë√¢y, s·∫Ω x·ª≠ l√Ω b·∫±ng JS *@
                            <span class="heart-icon">@(item.IsLikedByCurrentUser ? "‚ù§Ô∏è" : "ü§ç")</span>
                        </div>
                    </div>
                    <div class="location-details">
                        <h3 class="location-name">@item.Name</h3>
                        <div class="location-meta">
                            <div class="meta-item">
                                <span class="interaction-icon">‚ù§Ô∏è</span>
                                <span class="like-count" id="like-count-@item.SpotId">@(item.Favorites?.Count ?? 0)</span>
                            </div>
                            @* <div class="meta-item">
                                <span>üí¨</span>
                                <span> (item.Comments?.Count ?? 0)</span>
                            </div> *@
                            <div class="meta-item">
                                <span>üìç</span>
                                <span>@item.Address</span>
                            </div>
                        </div>
                        <div class="location-tags">
                            <a asp-action="Index" asp-route-categoryId="@item.CategoryId"
                                class="tag">@item.Category.Name</a>
                        </div>
                        <div class="location-actions">
                            <a asp-action="Details" asp-route-id="@item.SpotId" class="action-link details">
                                <i class="fas fa-info-circle"></i> Chi ti·∫øt
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.SpotId" class="action-link edit">
                                <i class="fas fa-edit"></i> S·ª≠a
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.SpotId" class="action-link delete">
                                <i class="fas fa-trash-alt"></i> X√≥a
                            </a>
                        </div>
                    </div>
                </div>
            }

            @if (!Model.Any())
            {
                <div class="empty-state">
                    <div class="empty-icon">üèùÔ∏è</div>
                    <h3>Ch∆∞a c√≥ ƒë·ªãa ƒëi·ªÉm du l·ªãch n√†o</h3>
                    <p>H√£y th√™m ƒë·ªãa ƒëi·ªÉm du l·ªãch ƒë·∫ßu ti√™n c·ªßa b·∫°n!</p>
                    <a asp-action="Create" class="btn-add-first">Th√™m ƒë·ªãa ƒëi·ªÉm</a>
                </div>
            }
        </div>
    </div>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Categories -->
        <div class="sidebar-section">
            <h3 class="sidebar-title">Danh m·ª•c</h3>
            <ul class="category-list">
                @{
                    // L·∫•y categoryId hi·ªán t·∫°i t·ª´ query string ƒë·ªÉ ƒë√°nh d·∫•u danh m·ª•c ƒëang ƒë∆∞·ª£c ch·ªçn
                    var currentCategoryId = Context.Request.Query["categoryId"].ToString();

                    // Gi·∫£ ƒë·ªãnh r·∫±ng b·∫°n c√≥ th·ªÉ truy c·∫≠p danh s√°ch danh m·ª•c t·ª´ ViewBag ho·∫∑c m·ªôt ngu·ªìn kh√°c
                    var categories = ViewBag.Categories as List<TourismWeb.Models.Category> ?? new
                    List<TourismWeb.Models.Category>();

                    if (categories.Any())
                    {
                        <li class="category-item">
                            <a asp-action="Index" class="@(string.IsNullOrEmpty(currentCategoryId) ? "active" : "")">
                                <span>T·∫•t c·∫£</span>
                                @* <span class="category-count">@Model.Count()</span> *@
                                <span class="category-count">@ViewBag.AllTouristSpotsCount</span>
                                <!-- Hi·ªÉn th·ªã t·ªïng s·ªë ƒë·ªãa ƒëi·ªÉm -->
                            </a>
                        </li>

                        foreach (var category in categories)
                        {
                            <li class="category-item">
                                <a asp-action="Index" asp-route-categoryId="@category.CategoryId"
                                    class="@(currentCategoryId == category.CategoryId.ToString() ? "active" : "")">
                                    <span>@category.Name</span>
                                    <span class="category-count">@(category.TouristSpots?.Count ?? 0)</span>
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        // Hi·ªÉn th·ªã danh m·ª•c m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                        <li class="category-item">
                            <a href="#">
                                <span>B√£i bi·ªÉn, ƒë·∫£o</span>
                                <span class="category-count">26</span>
                            </a>
                        </li>
                        <li class="category-item">
                            <a href="#">
                                <span>C·∫£nh ƒë·∫πp</span>
                                <span class="category-count">32</span>
                            </a>
                        </li>
                        <li class="category-item">
                            <a href="#">
                                <span>Di t√≠ch</span>
                                <span class="category-count">29</span>
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

        <!-- Popular locations -->
        <div class="sidebar-section">
            <h3 class="sidebar-title">ƒê·ªãa ƒëi·ªÉm ph·ªï bi·∫øn</h3>

            @{
                // S·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´ ViewBag.PopularSpots thay v√¨ x·ª≠ l√Ω trong View
                var popularSpots = ViewBag.PopularSpots as List<TourismWeb.Models.TouristSpot> ?? new
                List<TourismWeb.Models.TouristSpot>();

                if (popularSpots.Any())
                {
                    foreach (var spot in popularSpots)
                    {
                        <div class="popular-location">
                            <div class="popular-image">
                                <img src="@spot.ImageUrl" alt="@spot.Name">
                            </div>
                            <div class="popular-details">
                                <h4>
                                    <a asp-action="Details" asp-route-id="@spot.SpotId">@spot.Name</a>
                                </h4>
                                <div class="popular-meta">@(spot.Favorites?.Count ?? 0) l∆∞·ª£t th√≠ch</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    // Hi·ªÉn th·ªã d·ªØ li·ªáu m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                    <div class="popular-location">
                        <div class="popular-image">
                            <img src="~/images/hoian2.jpg" alt="H·ªôi An">
                        </div>
                        <div class="popular-details">
                            <h4>Ph·ªë c·ªï H·ªôi An</h4>
                            <div class="popular-meta">358 l∆∞·ª£t th√≠ch</div>
                        </div>
                    </div>
                    <div class="popular-location">
                        <div class="popular-image">
                            <img src="~/images/hangsondong.jpg" alt="Hang S∆°n ƒêo√≤ng">
                        </div>
                        <div class="popular-details">
                            <h4>Hang S∆°n ƒêo√≤ng</h4>
                            <div class="popular-meta">412 l∆∞·ª£t th√≠ch</div>
                        </div>
                    </div>
                }
            }

            <a asp-action="Popular" class="view-more">Xem th√™m</a>
        </div>

        <!-- Recent posts -->
        <div class="sidebar-section">
            <h3 class="sidebar-title">B√†i vi·∫øt g·∫ßn ƒë√¢y</h3>

            @{
                // Gi·∫£ ƒë·ªãnh r·∫±ng b·∫°n c√≥ th·ªÉ truy c·∫≠p danh s√°ch b√†i vi·∫øt g·∫ßn ƒë√¢y t·ª´ ViewBag ho·∫∑c m·ªôt ngu·ªìn kh√°c
                var recentPosts = ViewBag.RecentPosts as List<TourismWeb.Models.Post> ?? new List<TourismWeb.Models.Post>();

                if (recentPosts.Any())
                {
                    foreach (var post in recentPosts)
                    {
                        <div class="recent-post">
                            <div class="recent-image">
                                <img src="@post.ImageUrl" alt="@post.Title">
                            </div>
                            <div class="recent-details">
                                <h4>
                                    <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.PostId">@post.Title</a>
                                </h4>
                                <div class="post-date">
                                    <span>üìÖ</span>
                                    <span>@post.CreatedAt.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    // Hi·ªÉn th·ªã d·ªØ li·ªáu m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                    <div class="recent-post">
                        <div class="recent-image">
                            <img src="~/images/sondong.webp" alt="S∆°n ƒêo√≤ng">
                        </div>
                        <div class="recent-details">
                            <h4>Kh√°m ph√° Hang S∆°n ƒêo√≤ng - Hang ƒë·ªông l·ªõn nh·∫•t th·∫ø gi·ªõi</h4>
                            <div class="post-date">
                                <span>üìÖ</span>
                                <span>12/03/2025</span>
                            </div>
                        </div>
                    </div>
                    <div class="recent-post">
                        <div class="recent-image">
                            <img src="~/images/banhloc.jpg" alt="B√°nh L·ªçc">
                        </div>
                        <div class="recent-details">
                            <h4>Top 10 m√≥n ƒÉn kh√¥ng th·ªÉ b·ªè qua khi ƒë·∫øn Hu·∫ø</h4>
                            <div class="post-date">
                                <span>üìÖ</span>
                                <span>05/03/2025</span>
                            </div>
                        </div>
                    </div>
                }
            }

            <a asp-controller="Posts" asp-action="Index" class="view-more">Xem th√™m</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const antiForgeryToken = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]').value;
            const currentUserId = parseInt('@currentUserIdForJs'); // L·∫•y userId t·ª´ C#

            document.querySelectorAll('.location-favorite').forEach(favoriteDiv => {
                favoriteDiv.addEventListener('click', async function () {
                    if (currentUserId === 0) {
                        // Ho·∫∑c chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p
                        alert('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ y√™u th√≠ch ƒë·ªãa ƒëi·ªÉm n√†y.');
                        window.location.href = '/Identity/Account/Login'; // ƒêi·ªÅu ch·ªânh ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn
                        return;
                    }

                    const spotId = this.dataset.spotId;
                    const heartIconSpan = this.querySelector('.heart-icon');
                    const likeCountSpan = document.getElementById(`like-count-${spotId}`);

                    // T·∫°m th·ªùi thay ƒë·ªïi icon ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y ph·∫£n h·ªìi ngay
                    const isCurrentlyLiked = heartIconSpan.textContent === '‚ù§Ô∏è';
                    heartIconSpan.textContent = isCurrentlyLiked ? 'ü§ç' : '‚ù§Ô∏è';


                    try {
                        const response = await fetch(`/TouristSpots/ToggleFavoriteSpot?spotId=${spotId}`, {
                            method: 'POST',
                            headers: {
                                // 'Content-Type': 'application/json', // Kh√¥ng c·∫ßn n·∫øu ch·ªâ g·ª≠i spotId qua query string
                                'RequestVerificationToken': antiForgeryToken // G·ª≠i token
                            },
                            // body: JSON.stringify({ spotId: parseInt(spotId) }) // N·∫øu b·∫°n g·ª≠i d∆∞·ªõi d·∫°ng JSON body
                        });

                        if (!response.ok) {
                            // Ho√†n t√°c l·∫°i icon n·∫øu l·ªói
                            heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                            const errorData = await response.json().catch(() => null);
                            if (errorData && errorData.aniauth) {
                                alert(errorData.message || 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y.');
                                window.location.href = '/Identity/Account/Login';
                            } else {
                                alert(errorData ? errorData.message : 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.');
                            }
                            return;
                        }

                        const data = await response.json();

                        if (data.success) {
                            heartIconSpan.textContent = data.favorited ? '‚ù§Ô∏è' : 'ü§ç';
                            if (likeCountSpan) {
                                likeCountSpan.textContent = data.likeCount;
                            }
                        } else {
                            // Ho√†n t√°c l·∫°i icon n·∫øu server b√°o l·ªói logic
                            heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                            if (data.aniauth) {
                                alert(data.message || 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y.');
                                window.location.href = '/Identity/Account/Login';
                            } else {
                                alert(data.message || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t y√™u th√≠ch.');
                            }
                        }
                    } catch (error) {
                        // Ho√†n t√°c l·∫°i icon n·∫øu l·ªói m·∫°ng
                        heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                        console.error('L·ªói khi toggle favorite:', error);
                        alert('C√≥ l·ªói k·∫øt n·ªëi, vui l√≤ng th·ª≠ l·∫°i.');
                    }
                });
            });
        });
    </script>
}
<style>
    /* Main layout */
    .container {
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 30px;
        @* max-width: 1200px; *@
        margin: 0 auto;
        padding: 20px;
    }

    /* Header section */
    .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #333;
        margin: 0;
    }

    .create-button {
        display: inline-flex;
        align-items: center;
        background-color: #4CAF50;
        color: white;
        padding: 10px 16px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: background-color 0.3s;
    }

    .create-button i {
        margin-right: 8px;
    }

    .create-button:hover {
        background-color: #3e8e41;
        color: white;
    }

    /* Sort options */
    .sort-options {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
        border-bottom: 1px solid #eee;
        padding-bottom: 10px;
    }

    .sort-option {
        padding: 8px 15px;
        cursor: pointer;
        border-radius: 20px;
        font-weight: 500;
        transition: all 0.3s;
    }

    .sort-option:hover {
        background-color: #f0f0f0;
    }

    .sort-option.active {
        background-color: #e6f7ff;
        color: #1890ff;
        font-weight: 600;
    }

    /* Locations grid */
    .locations-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
    }

    .location-card {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        background-color: white;
    }

    .location-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .location-image {
        position: relative;
        height: 180px;
    }

    .location-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .location-highlight {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: #ff4757;
        color: white;
        padding: 4px 10px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 600;
        z-index: 1;
    }

    .location-favorite {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: transform 0.2s;
    }

    .location-favorite:hover {
        transform: scale(1.1);
    }

    .location-details {
        padding: 15px;
    }

    .location-name {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 10px 0;
        color: #333;
    }

    .location-meta {
        display: flex;
        gap: 15px;
        margin-bottom: 12px;
        font-size: 14px;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .location-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 15px;
    }

    .tag {
        background-color: #f0f0f0;
        padding: 4px 10px;
        border-radius: 4px;
        font-size: 12px;
        color: #666;
    }

    .location-actions {
        display: flex;
        gap: 10px;
        border-top: 1px solid #eee;
        padding-top: 12px;
    }

    .action-link {
        font-size: 13px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 5px;
        padding: 5px 10px;
        border-radius: 4px;
        transition: background-color 0.2s;
    }

    .action-link.details {
        color: #1890ff;
    }

    .action-link.edit {
        color: #52c41a;
    }

    .action-link.delete {
        color: #f5222d;
    }

    .action-link:hover {
        background-color: #f5f5f5;
    }

    /* Empty state */
    .empty-state {
        grid-column: 1 / -1;
        text-align: center;
        padding: 50px 20px;
        background-color: #f9f9f9;
        border-radius: 12px;
    }

    .empty-icon {
        font-size: 60px;
        margin-bottom: 20px;
    }

    .empty-state h3 {
        font-size: 24px;
        margin-bottom: 10px;
        color: #333;
    }

    .empty-state p {
        color: #666;
        margin-bottom: 20px;
    }

    .btn-add-first {
        display: inline-block;
        background-color: #1890ff;
        color: white;
        padding: 10px 20px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.3s;
    }

    .btn-add-first:hover {
        background-color: #096dd9;
        color: white;
    }

    /* Sidebar */
    .sidebar {
        position: sticky;
        top: 20px;
        align-self: start;
    }

    .sidebar-section {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-bottom: 25px;
        overflow: hidden;
    }

    .sidebar-title {
        font-size: 18px;
        font-weight: 600;
        padding: 15px;
        margin: 0;
        border-bottom: 1px solid #eee;
        color: #333;
    }

    /* Categories */
    .category-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .category-item {
        border-bottom: 1px solid #f0f0f0;
    }

    .category-item:last-child {
        border-bottom: none;
    }

    .category-item a {
        display: flex;
        justify-content: space-between;
        padding: 12px 15px;
        text-decoration: none;
        color: #333;
        transition: background-color 0.2s;
    }

    .category-item a:hover {
        background-color: #f5f5f5;
    }

    .category-count {
        background-color: #f0f0f0;
        border-radius: 20px;
        padding: 2px 8px;
        font-size: 12px;
        color: #666;
    }

    /* Popular locations */
    .popular-location {
        display: flex;
        padding: 12px 15px;
        border-bottom: 1px solid #f0f0f0;
    }

    .popular-location:last-child {
        border-bottom: none;
    }

    .popular-image {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        overflow: hidden;
        margin-right: 12px;
        flex-shrink: 0;
    }

    .popular-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .popular-details h4 {
        font-size: 14px;
        margin: 0 0 5px 0;
        color: #333;
    }

    .popular-meta {
        font-size: 12px;
        color: #666;
    }

    /* Recent posts */
    .recent-post {
        display: flex;
        padding: 12px 15px;
        border-bottom: 1px solid #f0f0f0;
    }

    .recent-post:last-child {
        border-bottom: none;
    }

    .recent-image {
        width: 70px;
        height: 70px;
        border-radius: 8px;
        overflow: hidden;
        margin-right: 12px;
        flex-shrink: 0;
    }

    .recent-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .recent-details h4 {
        font-size: 14px;
        margin: 0 0 5px 0;
        color: #333;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .post-date {
        font-size: 12px;
        color: #666;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .view-more {
        display: block;
        text-align: center;
        padding: 10px;
        background-color: #f5f5f5;
        color: #1890ff;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.2s;
    }

    .view-more:hover {
        background-color: #e6f7ff;
    }

    /* Responsive */
    media (max-width: 992px) {
        .container {
            grid-template-columns: 1fr;
        }

        .sidebar {
            display: none;
        }
    }

    media (max-width: 768px) {
        .locations-grid {
            grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        }
    }

    media (max-width: 576px) {
        .locations-grid {
            grid-template-columns: 1fr;
        }

        .header-section {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .sort-options {
            overflow-x: auto;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
    }

    /* Th√™m v√†o cu·ªëi file CSS hi·ªán t·∫°i */

    /* C·∫£i thi·ªán responsive cho layout */
    media (max-width: 992px) {
        .container {
            grid-template-columns: 1fr;
        }

        .sidebar {
            margin-top: 30px;
        }
    }

    media (max-width: 768px) {
        .locations-grid {
            grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        }

        .header-section {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .create-button {
            width: 100%;
            text-align: center;
        }

        .sort-options {
            overflow-x: auto;
            white-space: nowrap;
            padding-bottom: 10px;
        }

        .sort-option {
            display: inline-block;
        }
    }

    media (max-width: 576px) {
        .locations-grid {
            grid-template-columns: 1fr;
        }
    }

    /* C·∫£i thi·ªán hi·ªÉn th·ªã cho danh m·ª•c */
    .category-list a.active {
        background-color: #e6f7ff;
        color: #1890ff;
        font-weight: 600;
    }

    /* C·∫£i thi·ªán hi·ªÉn th·ªã cho tag */
    .location-tags .tag {
        text-decoration: none;
        transition: background-color 0.2s;
    }

    .location-tags .tag:hover {
        background-color: #e6f7ff;
        color: #1890ff;
    }

    /* C·∫£i thi·ªán hi·ªÉn th·ªã cho n√∫t th√≠ch */
    .location-favorite {
        cursor: pointer;
        transition: transform 0.2s;
    }

    .location-favorite:hover {
        transform: scale(1.2);
    }

    /* C·∫£i thi·ªán hi·ªÉn th·ªã cho c√°c li√™n k·∫øt trong sidebar */
    .popular-details h4 a,
    .recent-details h4 a {
        color: inherit;
        text-decoration: none;
        transition: color 0.2s;
    }

    .popular-details h4 a:hover,
    .recent-details h4 a:hover {
        color: #1890ff;
    }
</style>