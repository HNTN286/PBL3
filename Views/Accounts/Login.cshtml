@* @{
    ViewData["Title"] = "Đăng Nhập";
    // Lấy App ID từ cấu hình hoặc đặt trực tiếp ở đây (không khuyến khích cho production)
    // string facebookAppId = Configuration["FacebookAppId"]; // Ví dụ nếu bạn lưu trong appsettings.json
    string facebookAppId = "1041418547323421"; // !!! ID NÀY LÀ CỦA BẠN, ĐẢM BẢO ĐÚNG !!!
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<style>
    /* Thêm một chút style cho nút Facebook */
    .btn-facebook {
        background-color: #3b5998;
        color: white;
    }

    .btn-facebook:hover {
        background-color: #2d4373;
        color: white;
    }

    /* Bạn có thể thêm style cho nút Google nếu muốn */
    .btn-google-custom {
        /* Đổi tên class nếu bạn muốn style riêng thay vì dùng btn-danger */
        background-color: #DB4437;
        color: white;
    }

    .btn-google-custom:hover {
        background-color: #C23321;
        color: white;
    }
</style>

<body>
    <div class="login-card">
        <img src="/images/logo3.jpg" alt="Logo" width="120">
        <h2>Đăng Nhập</h2>

        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @if (TempData["FacebookLoginError"] != null)
        {
            <div class="alert alert-danger">@TempData["FacebookLoginError"]</div>
        }
        @if (TempData["GoogleLoginError"] != null) 
        {
            <div class="alert alert-danger">@TempData["GoogleLoginError"]</div>
        }


        <form method="post" asp-action="Login" asp-controller="Accounts">
            <div class="input-group mb-3">
                <span class="input-group-text"><i class="fa fa-user"></i></span>
                <input type="text" name="UsernameOrEmail" class="form-control" placeholder="Tên đăng nhập hoặc Email"
                    required />
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text"><i class="fa fa-lock"></i></span>
                <input type="password" name="Password" id="password" class="form-control" placeholder="Mật khẩu"
                    required />
                <span class="input-group-text toggle-password"><i class="fa fa-eye"></i></span>
            </div>

            <div class="form-check text-start mb-2">
                <input class="form-check-input" type="checkbox" name="RememberMe" id="remember" />
                <label class="form-check-label" for="remember">Nhớ mật khẩu</label>
            </div>

            <button type="submit" class="btn btn-primary w-100">Đăng Nhập</button>
        </form>

        <div class="text-center my-3">Hoặc</div>

        <!-- Nút Đăng nhập với Facebook -->
        <button type="button" id="btnFacebookLogin" class="btn btn-facebook w-100 mb-2">
            <i class="fab fa-facebook-square me-2"></i>Đăng nhập với Facebook
        </button>
        <!-- Nút Đăng nhập với Google -->
        <div id="btnGoogleLoginRenderLocation" class="w-100 mb-2 d-flex justify-content-center"></div>

        <div class="mb-2"></div>

        <div class="text-center mt-2"></div>
        <a asp-controller="Accounts" asp-action="ForgotPassword">Quên mật khẩu?</a> 
    </div>

    <div class="text-center mt-3">
        <a asp-controller="Accounts" asp-action="Register">Chưa có tài khoản? Đăng ký</a>
    </div>
    </div>

    <!-- Form ẩn để gửi dữ liệu Facebook lên server -->
    <form id="facebookLoginForm" asp-action="FacebookLogin" asp-controller="Accounts" method="post"
        style="display:none;">
        <input type="hidden" name="FacebookUserId" id="fbUserId" />
        <input type="hidden" name="Email" id="fbEmail" />
        <input type="hidden" name="FullName" id="fbFullName" />
        <input type="hidden" name="AccessToken" id="fbAccessToken" />
        @Html.AntiForgeryToken()
    </form>
    <!-- Form ẩn để gửi ID Token của Google lên server -->
    <form id="googleLoginForm" asp-action="GoogleLogin" asp-controller="Accounts" method="post" style="display:none;">
        <input type="hidden" name="IdToken" id="googleIdToken" />
        @Html.AntiForgeryToken()
    </form>

    <script>
        document.querySelector(".toggle-password").addEventListener("click", function () {
            let passwordInput = document.getElementById("password");
            let icon = this.querySelector("i");
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                passwordInput.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        });

        // --- Facebook Login Script ---
        const facebookAppIdConst = "@facebookAppId"; // Đổi tên biến để tránh trùng lặp nếu có

        window.fbAsyncInit = function () {
            FB.init({
                appId: facebookAppIdConst,
                cookie: true,
                xfbml: true,
                version: 'v19.0'
            });
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        var fbButton = document.getElementById('btnFacebookLogin');
        if (fbButton) {
            fbButton.addEventListener('click', function () {
                FB.login(function (response) {
                    if (response.authResponse) {
                        console.log('Facebook: Welcome! Fetching your information.... ');
                        FB.api('/me', { fields: 'id,name,email' }, function (userData) {
                            document.getElementById('fbUserId').value = userData.id;
                            document.getElementById('fbEmail').value = userData.email || '';
                            document.getElementById('fbFullName').value = userData.name;
                            document.getElementById('fbAccessToken').value = response.authResponse.accessToken;
                            document.getElementById('facebookLoginForm').submit();
                        });
                    } else {
                        console.log('Facebook: User cancelled login or did not fully authorize.');
                    }
                }, { scope: 'email,public_profile' });
            });
        }
    </script>

    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <script>
        // !!! THAY THẾ BẰNG CLIENT ID THẬT CỦA BẠN !!!
        const googleClientIdConst = "74136756439-vmv7kvaot8666ga0rubg2ccn3rkdqp6j.apps.googleusercontent.com";

        function handleGoogleCredentialResponse(response) {
            console.log("Google Sign-In Response Received.");
            console.log("Encoded JWT ID token: " + response.credential);
            document.getElementById('googleIdToken').value = response.credential;
            console.log("Submitting Google login form with ID Token...");
            document.getElementById('googleLoginForm').submit();
        }

        // Đảm bảo hàm này được gọi sau khi thư viện Google được tải
        // window.onload thường chỉ được gọi một lần, nên nếu đã dùng cho Facebook, cần cẩn thận
        // Một cách tốt hơn là kiểm tra sự tồn tại của 'google' object
        function initializeGoogleSignIn() {
            if (typeof google !== 'undefined' && google.accounts && google.accounts.id) {
                console.log("Google Identity Services (GIS) library loaded. Initializing...");
                try {
                    google.accounts.id.initialize({
                        client_id: googleClientIdConst,
                        callback: handleGoogleCredentialResponse
                    });
                    console.log("GIS initialized with Client ID: " + googleClientIdConst);

                    var googleButtonRenderDiv = document.getElementById("btnGoogleLoginRenderLocation");
                    if (googleButtonRenderDiv) {
                        console.log("Rendering Google Sign-In button...");
                        google.accounts.id.renderButton(
                            googleButtonRenderDiv,
                            {
                                theme: "outline", size: "large", type: "standard",
                                shape: "rectangular", text: "signin_with", logo_alignment: "left",
                                width: googleButtonRenderDiv.offsetWidth > 0 ? googleButtonRenderDiv.offsetWidth.toString() : "280" // Lấy chiều rộng của div cha, hoặc mặc định
                            }
                        );
                        console.log("Google Sign-In button rendered or render attempt made.");
                    } else {
                        console.error("Element with ID 'btnGoogleLoginRenderLocation' not found for Google button.");
                    }
                } catch (e) {
                    console.error("Error during Google Sign-In initialization or rendering: ", e);
                }
            } else {
                console.warn("Google Identity Services (GIS) library not loaded yet. Will retry or check script import.");
                // Có thể thử lại sau một khoảng thời gian ngắn nếu thư viện tải chậm
                // setTimeout(initializeGoogleSignIn, 500);
            }
        }

        // Gọi hàm khởi tạo Google sau khi trang tải xong
        // Nếu bạn đã có window.onload cho Facebook, hãy gộp chúng lại hoặc dùng DOMContentLoaded
        if (window.attachEvent) { // IE
            window.attachEvent('onload', initializeGoogleSignIn);
        } else if (window.addEventListener) { // Hầu hết các trình duyệt
            window.addEventListener('load', initializeGoogleSignIn, false);
        } else { // Fallback
            document.addEventListener('load', initializeGoogleSignIn, false);
        }

    </script>
</body> *@
@{
    ViewData["Title"] = "Đăng Nhập";
    string facebookAppId = "1041418547323421"; // ID Facebook của bạn
                                               // !!! THAY THẾ BẰNG GOOGLE CLIENT ID THẬT CỦA BẠN !!!
    string googleClientId = "74136756439-vmv7kvaot8666ga0rubg2ccn3rkdqp6j.apps.googleusercontent.com";
}

@section Styles {
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --text-color: #212529;
            --border-radius: 12px;
            --box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        }

        /* Nếu _Layout.cshtml đã có style cho body, bạn có thể không cần phần này
                                                                       Hoặc bạn có thể thêm một class đặc biệt cho body của trang login
                                                                       và chỉ style class đó để tránh ảnh hưởng trang khác.
                                                                       Ví dụ: body.page-login { background-color: #eef2f7; }
                                                                    */

        .login-card-wrapper {
            /* Class mới để chứa login-card và link đăng ký */
            width: 100%;
        }

        .login-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 35px 30px;
            text-align: center;
            width: 100%;
        }

        .login-card .logo-img {
            margin-bottom: 20px;
            border-radius: 50%;
            width: 90px;
            height: 80px;
            object-fit: cover;
        }

        .login-card h2 {
            color: var(--text-color);
            font-weight: 600;
            margin-bottom: 25px;
            font-size: 26px;
        }

        .form-control {
            border: 1px solid #ced4da;
            padding: 10px 15px;
            height: auto;
            font-size: 1rem;
            transition: all 0.2s ease-in-out;
            border-radius: 0.375rem;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.15);
        }

        .input-group {
            margin-bottom: 1.25rem;
        }

        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            color: #495057;
        }

        .toggle-password {
            cursor: pointer;
        }

        .btn {
            padding: 10px 15px;
            font-size: 1rem;
            font-weight: 500;
            border-radius: 0.375rem;
            transition: all 0.2s ease-in-out;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-primary:hover {
            background-color: var(--primary-hover);
            border-color: var(--primary-hover);
        }

        .divider {
            display: flex;
            align-items: center;
            text-align: center;
            margin: 20px 0;
            color: #6c757d;
            font-size: 0.9rem;
        }

        .divider::before,
        .divider::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #dee2e6;
        }

        .divider::before {
            margin-right: .5em;
        }

        .divider::after {
            margin-left: .5em;
        }

        .social-login .btn {
            margin-bottom: 10px;
        }

        .btn-facebook {
            background-color: #3b5998;
            color: white;
        }

        .btn-facebook:hover {
            background-color: #2d4373;
            color: white;
        }

        .form-check {
            text-align: left;
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }

        .form-check-input {
            margin-top: 0.1em;
            margin-right: 0.5em;
        }

        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .form-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.25rem;
        }

        .form-footer a,
        .register-link-container a {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.2s ease-in-out;
        }

        .form-footer a:hover,
        .register-link-container a:hover {
            color: var(--primary-hover);
            text-decoration: underline;
        }

        .register-link-container {
            margin-top: 1.5rem;
            font-size: 0.95rem;
        }

        .alert {
            border-radius: 0.375rem;
            padding: 0.8rem 1rem;
            margin-bottom: 1.25rem;
            border: none;
            font-size: 0.9rem;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border-color: #f5c6cb;
        }

        .alert-success {
            background-color: #d1e7dd;
            color: #0f5132;
            border-color: #badbcc;
        }

        @@media (max-width: 576px) {
            .login-card {
                padding: 25px 15px;
            }

            .login-card h2 {
                font-size: 22px;
                margin-bottom: 20px;
            }

            .social-login .btn,
            .btn-primary {
                font-size: 0.95rem;
            }
        }
    </style>
}

<div class="container"> @* Container chính của Bootstrap *@
    <div class="row justify-content-center">
        @*
            THÊM MARGIN TOP VÀ BOTTOM Ở ĐÂY ĐỂ TẠO KHOẢNG CÁCH VỚI HEADER/FOOTER.
            mt-5 mb-5 tạo khoảng cách lớn (khoảng 3rem).
            Bạn có thể thay đổi thành mt-3 mb-3, mt-4 mb-4, hoặc giá trị khác.
        *@
        <div class="col-12 col-sm-8 col-md-7 col-lg-5 col-xl-4 mt-5 mb-5 login-card-wrapper">
            <div class="login-card">
                <a asp-controller="Home" asp-action="Index">
                    <img src="/images/logo3.jpg" alt="Logo" class="logo-img">
                </a>
                <h2>Đăng Nhập</h2>

                @if (ViewBag.SuccessMessage != null)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle me-2"></i>@ViewBag.SuccessMessage
                    </div>
                }
                @if (ViewBag.ErrorMessage != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>@ViewBag.ErrorMessage
                    </div>
                }
                @if (TempData["FacebookLoginError"] != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["FacebookLoginError"]
                    </div>
                }
                @if (TempData["GoogleLoginError"] != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["GoogleLoginError"]
                    </div>
                }


                <form method="post" asp-action="Login" asp-controller="Accounts">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-user"></i></span>
                        <input type="text" name="UsernameOrEmail" class="form-control"
                            placeholder="Tên đăng nhập hoặc Email" required />
                    </div>

                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-lock"></i></span>
                        <input type="password" name="Password" id="password" class="form-control" placeholder="Mật khẩu"
                            required />
                        <span class="input-group-text toggle-password"><i class="fa fa-eye"></i></span>
                    </div>

                    <div class="form-footer">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="RememberMe" id="remember" />
                            <label class="form-check-label" for="remember">Nhớ mật khẩu</label>
                        </div>
                        <a asp-controller="Accounts" asp-action="ForgotPassword">Quên mật khẩu?</a>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-lg">Đăng Nhập</button>
                    </div>
                </form>

                <div class="divider">hoặc</div>

                <div class="social-login">
                    <button type="button" id="btnFacebookLogin" class="btn btn-facebook w-100">
                        <i class="fab fa-facebook-square me-2"></i>Đăng nhập với Facebook
                    </button>
                    <div id="googleButtonRenderLocation" class="w-100 d-flex justify-content-center mt-2"></div>
                </div>
            </div>

            <div class="text-center register-link-container">
                <span>Chưa có tài khoản? </span>
                <a class="fw-bold" asp-controller="Accounts" asp-action="Register">Đăng ký ngay</a>
            </div>
        </div>
    </div>
</div>

<!-- Form ẩn để gửi dữ liệu Facebook lên server -->
<form id="facebookLoginForm" asp-action="FacebookLogin" asp-controller="Accounts" method="post" style="display:none;">
    <input type="hidden" name="FacebookUserId" id="fbUserId" />
    <input type="hidden" name="Email" id="fbEmail" />
    <input type="hidden" name="FullName" id="fbFullName" />
    <input type="hidden" name="AccessToken" id="fbAccessToken" />
    @Html.AntiForgeryToken()
</form>

<!-- Form ẩn để gửi ID Token của Google lên server -->
<form id="googleLoginForm" asp-action="GoogleLogin" asp-controller="Accounts" method="post" style="display:none;">
    <input type="hidden" name="IdToken" id="googleIdToken" />
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // Toggle Password Visibility
        var togglePasswordButton = document.querySelector(".toggle-password");
        if (togglePasswordButton) {
            togglePasswordButton.addEventListener("click", function () {
                let passwordInput = document.getElementById("password");
                let icon = this.querySelector("i");
                if (passwordInput.type === "password") {
                    passwordInput.type = "text";
                    icon.classList.remove("fa-eye");
                    icon.classList.add("fa-eye-slash");
                } else {
                    passwordInput.type = "password";
                    icon.classList.remove("fa-eye-slash");
                    icon.classList.add("fa-eye");
                }
            });
        }

        // --- Facebook Login Script ---
        const facebookAppIdConst = "@facebookAppId";
        window.fbAsyncInit = function () {
            console.log("Facebook SDK loaded, fbAsyncInit called.");
            FB.init({
                appId: facebookAppIdConst,
                cookie: true,
                xfbml: true,
                version: 'v19.0'
            });
            console.log("FB.init completed for App ID: " + facebookAppIdConst);
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { console.log("Facebook SDK script already exists."); return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/vi_VN/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
            console.log("Facebook SDK script inserted.");
        }(document, 'script', 'facebook-jssdk'));

        var fbButton = document.getElementById('btnFacebookLogin');
        if (fbButton) {
            fbButton.addEventListener('click', function () {
                console.log("Facebook login button clicked.");
                if (typeof FB !== 'undefined' && FB.login) {
                    FB.login(function (response) {
                        if (response.authResponse) {
                            console.log('Facebook: Authentication successful. Fetching user data...');
                            FB.api('/me', { fields: 'id,name,email' }, function (userData) {
                                console.log('Facebook: User data received:', userData);
                                document.getElementById('fbUserId').value = userData.id;
                                document.getElementById('fbEmail').value = userData.email || '';
                                document.getElementById('fbFullName').value = userData.name;
                                document.getElementById('fbAccessToken').value = response.authResponse.accessToken;
                                console.log('Facebook: Submitting form to server...');
                                document.getElementById('facebookLoginForm').submit();
                            });
                        } else {
                            console.log('Facebook: User cancelled login or did not fully authorize.');
                        }
                    }, { scope: 'email,public_profile' });
                } else {
                    console.error("FB.login is not available. Facebook SDK might not be fully initialized or error during init.");
                }
            });
        } else {
            console.warn("Facebook login button not found.");
        }
    </script>

    @* --- Google Login Script --- *@
    <script src="https://accounts.google.com/gsi/client" async defer onload="onGoogleLibraryLoad"></script>
    <script>
        const googleClientIdConst = "@googleClientId";

        function handleGoogleCredentialResponse(response) {
            console.log("Google Sign-In Response Received.");
            if (response.credential) {
                console.log("Encoded JWT ID token (first 30 chars): " + response.credential.substring(0, 30) + "...");
                document.getElementById('googleIdToken').value = response.credential;
                console.log("Submitting Google login form with ID Token...");
                document.getElementById('googleLoginForm').submit();
            } else {
                console.error("Google Sign-In: No credential received in response.", response);
            }
        }

        function onGoogleLibraryLoad() {
            console.log("Google GSI client library has loaded via onload attribute.");
            if (typeof google !== 'undefined' && google.accounts && google.accounts.id) {
                try {
                    google.accounts.id.initialize({
                        client_id: googleClientIdConst,
                        callback: handleGoogleCredentialResponse
                    });
                    console.log("Google GIS initialized with Client ID: " + googleClientIdConst);

                    var googleButtonRenderDiv = document.getElementById("googleButtonRenderLocation");
                    if (googleButtonRenderDiv) {
                        console.log("Rendering Google Sign-In button...");
                        google.accounts.id.renderButton(
                            googleButtonRenderDiv,
                            {
                                theme: "outline", size: "large", type: "standard",
                                shape: "rectangular", text: "signin_with", logo_alignment: "left",
                                width: "100%" // Để nút Google chiếm 100% div cha là .googleButtonRenderLocation
                            }
                        );
                        console.log("Google Sign-In button render attempt made.");
                    } else {
                        console.error("Element with ID 'googleButtonRenderLocation' not found for Google button.");
                    }
                } catch (e) {
                    console.error("Error during Google Sign-In initialization or rendering: ", e);
                }
            } else {
                console.error("Google Identity Services (GIS) library loaded, but 'google.accounts.id' is undefined.");
            }
        }
    </script>
}